% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debarcoding.R
\name{BascetShardify}
\alias{BascetShardify}
\title{Take debarcoded reads, merge them, and split them into suitable numbers of shards.}
\usage{
BascetShardify(
  debstat,
  numOutputShards = 1,
  outputName = "filtered",
  overwrite = FALSE,
  runner = GetDefaultBascetRunner(),
  bascetInstance = GetDefaultBascetInstance()
)
}
\arguments{
\item{debstat}{Plan for sharding provided by PrepareSharding}

\item{numOutputShards}{How many shards to generate /for each input library/}

\item{outputName}{Name of the output file: Properly sharded debarcoded reads}

\item{overwrite}{Force overwriting of existing files. The default is to do nothing files exist}

\item{runner}{The job manager, specifying how the command will be run (e.g. locally, or via SLURM)}

\item{bascetInstance}{A Bascet instance}
}
\value{
A runner job (details depends on runner)
}
\description{
The reads from one cell is guaranteed to only be present in a single shard.
This makes parallel processing simple as each shard can be processed on
a separate computer. Using more shards means that more computers can process the data in parallel.
However, if you perform all the calculations on a single computer, having more
than one shard will not result in a speedup. This option is only relevant
when using a cluster of compute nodes.
}
