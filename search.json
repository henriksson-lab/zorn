[{"path":"https://henriksson-lab.github.io/zorn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Henriksson. Author, maintainer. Laura Carroll. Author. Hadrien Gourlé. Author. Julian Dicken. Author. Henriksson Lab, Carroll Lab Collaborators. Funder.","code":""},{"path":"https://henriksson-lab.github.io/zorn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"xxx et al. Scalable single-cell metagenomic analysis Bascet Zorn. Biorxiv (2025)","code":"@Article{,   author = {{todo} and Laura Carroll and Johan Henriksson},   title = {Scalable single-cell metagenomic analysis with Bascet and Zorn},   journal = {Biorxiv},   year = {2025},   doi = {todo},   url = {https://todo}, }"},{"path":"https://henriksson-lab.github.io/zorn/index.html","id":"zorn","dir":"","previous_headings":"","what":"Zorn","title":"An all-purpose solution for processing of single-cell microbial data","text":"proud announce Zorn! install package, see install page.","code":""},{"path":"https://henriksson-lab.github.io/zorn/index.html","id":"about-zorn","dir":"","previous_headings":"","what":"About Zorn","title":"An all-purpose solution for processing of single-cell microbial data","text":"Zorn R package designed use Zorn research, please cite: (TODO) Zorn developed maintained Henriksson Carroll labs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate frequency of minhashes across cells — AggregateMinhashes","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"Aggregate frequency minhashes across cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"","code":"AggregateMinhashes(bascetRoot, inputName = \"minhash\", bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"bascetRoot root folder Bascets stored inputName description bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"command assumes cells named follows: well1_well2_well3_well4, e.g. well1 format G12","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"","code":"AtrandiBarcodeStats(   bascetRoot,   inputName = \"debarcoded\",   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"Produce matrix Barnyard plots, .e., counts one species vs another, combinations species.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"","code":"BarnyardPlotMatrix(adata)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"adata Seurat object DefaultAssay set species count","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"ggarranged set ggplots","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/Bascet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A bascet, along with all the shards — Bascet-class","title":"A bascet, along with all the shards — Bascet-class","text":"bascet, along shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from previous Map call — BascetAggregateMap","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"todo: allow multi-cpu support? parallel library todo note, effectively pure-R map function. different name? todo: allow multi-cpu support? parallel library todo note, effectively pure-R map function. different name?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"","code":"BascetAggregateMap(   bascetRoot,   bascetName,   aggrFunction,   showProgress = TRUE,   bascet_instance )  BascetAggregateMap(   bascetRoot,   bascetName,   aggrFunction,   showProgress = TRUE,   bascet_instance )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"TODO TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":null,"dir":"Reference","previous_headings":"","what":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"TODO managed Bascet mapshard system, automatic input conversion. unaligned file made temp removed","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"","code":"BascetAlignToReference(   bascetRoot,   useReference,   numLocalThreads = 1,   inputName = \"asfq\",   outputNameBAMunsorted = \"unsorted_aligned\",   outputNameBAMsorted = \"aligned\",   do_sort = TRUE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAssemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble the genomes — BascetAssemble","title":"Assemble the genomes — BascetAssemble","text":"TODO yet implemented","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAssemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble the genomes — BascetAssemble","text":"","code":"BascetAssemble(   bascetRoot,   inputName = \"rawreads\",   outputName = \"assembled\",   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"Take aligned BAM file produce Fragments.tsv.gz, compatible Signac ATAC-seq style analysis","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"","code":"BascetBam2Fragments(   bascetRoot,   inputName = \"aligned\",   outputName = \"fragments\",   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"job, producing type Fragments.tsv.gz","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of cells in a Bascet — BascetCellNames","title":"Get list of cells in a Bascet — BascetCellNames","text":"Get list cells Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of cells in a Bascet — BascetCellNames","text":"","code":"BascetCellNames(bascetRoot, bascetName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of cells in a Bascet — BascetCellNames","text":"bascetRoot root folder Bascets stored bascetName Name bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of cells in a Bascet — BascetCellNames","text":"Vector cell names strings","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":null,"dir":"Reference","previous_headings":"","what":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"aligned BAM file, compute counts per chromosome","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"","code":"BascetCountChrom(   bascetRoot,   inputName = \"aligned\",   outputName = \"chromcount\",   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"job, executing counting","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturise.html","id":null,"dir":"Reference","previous_headings":"","what":"Select kmers that appear useful for clustering — BascetFeaturise","title":"Select kmers that appear useful for clustering — BascetFeaturise","text":"CHANGED: just sums kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select kmers that appear useful for clustering — BascetFeaturise","text":"","code":"BascetFeaturise(   bascetRoot,   inputName = \"kmc\",   outputName = \"sumkmers\",   includeCells = NULL,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select kmers that appear useful for clustering — BascetFeaturise","text":"bascetRoot root folder Bascets stored includeCells List cells process runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select kmers that appear useful for clustering — BascetFeaturise","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"Generate BAM barcodes input raw FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"","code":"BascetGetRaw(   bascetRoot,   rawmeta,   outputName = \"debarcoded\",   outputNameIncomplete = \"incomplete_reads\",   chemistry = \"atrandi_wgs\",   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"bascetRoot root folder Bascets stored rawmeta Metadata raw FASTQ input files. See DetectRawFileMeta outputName Name output files: Debarcoded reads outputNameIncomplete Name output files: Reads parsed chemistry type data parsed runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new bascet instance — BascetInstance","title":"Create a new bascet instance — BascetInstance","text":"Create new bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new bascet instance — BascetInstance","text":"","code":"BascetInstance(bin, tempdir, prepend_cmd = \"\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new bascet instance — BascetInstance","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":null,"dir":"Reference","previous_headings":"","what":"Read one file from a Bascet — BascetListFilesForCell","title":"Read one file from a Bascet — BascetListFilesForCell","text":"can made faster , e.g., reading location objects file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read one file from a Bascet — BascetListFilesForCell","text":"","code":"BascetListFilesForCell(   bascetFile,   cellID,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read one file from a Bascet — BascetListFilesForCell","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a function for all cells — BascetMapCell","title":"Call a function for all cells — BascetMapCell","text":"Call function cells Call function cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a function for all cells — BascetMapCell","text":"","code":"BascetMapCell(   bascetRoot,   withfunction,   inputName,   outputName,   runner,   bascet_instance = bascet_instance.default )  BascetMapCell(   bascetRoot,   withfunction,   inputName,   outputName,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a function for all cells — BascetMapCell","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data — BascetMapTransform","title":"Transform data — BascetMapTransform","text":"command enables subsetting list cells converting file formats merging shards dividing shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data — BascetMapTransform","text":"","code":"BascetMapTransform(   bascetRoot,   inputName,   outputName,   num_divide = 1,   num_merge = 1,   out_format = \"tirp.gz\",   includeCells = NULL,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data — BascetMapTransform","text":"num_divide description num_merge description out_format description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Build count table from kmer table and a list of selected kmers — BascetQuery","title":"Build count table from kmer table and a list of selected kmers — BascetQuery","text":"Build count table kmer table list selected kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build count table from kmer table and a list of selected kmers — BascetQuery","text":"","code":"BascetQuery(   bascetRoot,   inputName = \"kmc\",   outputName = \"kmer\",   useKMERs,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build count table from kmer table and a list of selected kmers — BascetQuery","text":"bascetRoot root folder Bascets stored useKMERs description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build count table from kmer table and a list of selected kmers — BascetQuery","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read one file from a Bascet — BascetReadFile","title":"Read one file from a Bascet — BascetReadFile","text":"TODO can made faster , e.g., reading location objects file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read one file from a Bascet — BascetReadFile","text":"","code":"BascetReadFile(   bascetFile,   cellID,   filename,   as = c(\"tempfile\"),   bascet_instance = bascet_instance.default,   verbose = FALSE )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read one file from a Bascet — BascetReadFile","text":"bascetFile Handle opened Bascet file cellID ID cell (string) filename description description bascet_instance Configuration run Bascet Rust API verbose description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read one file from a Bascet — BascetReadFile","text":"Name temporary file read content stored","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKrakenMakeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Run KRAKEN2 and produce a count matrix of taxonomy IDs — BascetRunKrakenMakeMatrix","title":"Run KRAKEN2 and produce a count matrix of taxonomy IDs — BascetRunKrakenMakeMatrix","text":"TODO: run kraken run","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKrakenMakeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run KRAKEN2 and produce a count matrix of taxonomy IDs — BascetRunKrakenMakeMatrix","text":"","code":"BascetRunKrakenMakeMatrix(   bascetRoot,   useKrakenDB = \"/data/henlab/kraken/standard-8\",   numLocalThreads = 1,   inputName = \"kraken_out\",   outputName = \"kraken\",   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKrakenMakeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run KRAKEN2 and produce a count matrix of taxonomy IDs — BascetRunKrakenMakeMatrix","text":"bascetRoot root folder Bascets stored useKrakenDB description numLocalThreads description inputName description outputName description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":null,"dir":"Reference","previous_headings":"","what":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"reads one cell guaranteed present single shard. makes parallel processing simple shard can processed separate computer. Using shards means computers can used.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"","code":"BascetShardify(   bascetRoot,   inputName = \"debarcoded\",   includeCells = NULL,   num_output_shards = 1,   outputName = \"filtered\",   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"inputName Name input file: Debarcoded reads outputName Name output file: Properly sharded debarcoded reads","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"perform calculations single computer, one shard result speedup. option relevant using cluster compute nodes. TODO multiple input samples, way group ? otherwise reading input files needed. said, got index, list cells specified, possible quickly figure file needed merge TODO Figuring file needed can done \"planning\" (Zorn) stage TODO seems faster single merger writes multiple output files cell list provided. overhead accepted read input files discard cells fly","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a count matrix on strain level — ChromToSpeciesCount","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"TODO specific?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"","code":"ChromToSpeciesCount(adata, map_seq2strain)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"Obtain feature matrix (seurat object) given seurat object Fragments associated","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"","code":"CountGrangeFeatures(adata, grange_gene)"},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"adata Seurat object, FeatureMatrix grange_gene grange object telling count","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"Seurat AssayObject","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"_R1 – common illumina sequencer SRR****_1.fastq.gz – typical SRA","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"","code":"DetectRawFileMeta(rawRoot, verbose = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"rawRoot Path folder FASTQ files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"data frame metadata raw input files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"TODO convenient handle multiple samples, sample1/xxx; case, prepend sample name barcodes. issue: shardifying, good keep info merge. reduces work plenty! keep list shards belong next step","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":null,"dir":"Reference","previous_headings":"","what":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"Signac chromatin assay fragments, cell, count many reads per chromosome","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"","code":"FragmentCountsPerChrom(chrom_assay, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"FeatureMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"Signac chromatin assay fragments, cell, count many reads per chromosome. function directly returns assay can added Seurat multimodal object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"","code":"FragmentCountsPerChromAssay(bascetRoot, inputName = \"fragments.1.tsv.gz\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"seurat object holding counts","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":null,"dir":"Reference","previous_headings":"","what":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"Case: tabix command line uses 100% cpu . likely designed large queries","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"","code":"FragmentsToSignac(fragpath)"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"ChromatinAssay","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a temp directory to use; need to be created — GetBascetTempDir","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"Get temp directory use; need created","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"","code":"GetBascetTempDir(bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"Pick random KMERs KMC3 database. choice among KMERs within frequency range","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"","code":"KmcChooseKmerFeatures(fname, num_pick = 1000, minfreq = 0.01, maxfreq = 0.1)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"fname description num_pick description minfreq description maxfreq description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"List KMERs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a histogram from a KMC3 database — KmcGetHistogram","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"Generate histogram KMC3 database","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"","code":"KmcGetHistogram(fname, plot = TRUE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"fname Full name KMC3 database toplot Decide plot return raw data","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"ggplot object toplot=TRUE, otherwise data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get KMERs from a KMC3 database — KmcGetKmers","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"TODO finish properly","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"","code":"KmcGetKmers(fname, mincount = NULL, maxcount = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a kneeplot — KneeplotPerSpecies","title":"Produce a kneeplot — KneeplotPerSpecies","text":"Produce kneeplot","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a kneeplot — KneeplotPerSpecies","text":"","code":"KneeplotPerSpecies(adata, max_species = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a kneeplot — KneeplotPerSpecies","text":"adata description max_species description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a kneeplot — KneeplotPerSpecies","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"KRAKEN2 count matrix, return consensus taxID cell metadata","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"","code":"KrakenFindConsensusTaxonomy(mat)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"mat count matrix, typically sparse format","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"data.frame holding cellID consensus taxID","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Using a KRAKEN2 count matrix, produce a ","title":"Using a KRAKEN2 count matrix, produce a ","text":"Using KRAKEN2 count matrix, produce \"kneeplot\" species","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using a KRAKEN2 count matrix, produce a ","text":"","code":"KrakenSpeciesDistribution(adata, use_assay = \"kraken\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using a KRAKEN2 count matrix, produce a ","text":"adata Seurat object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using a KRAKEN2 count matrix, produce a ","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new local runner instance — LocalRunner","title":"Create new local runner instance — LocalRunner","text":"Create new local runner instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new local runner instance — LocalRunner","text":"","code":"LocalRunner(maxcpu = \"10\", direct = FALSE, show_script = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new local runner instance — LocalRunner","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function for concatenating a list of data.frames into a single data.frame. To be used to simplify the output of BascetAggregateMap — MapListAsDataFrame","title":"Convenience function for concatenating a list of data.frames into a single data.frame. To be used to simplify the output of BascetAggregateMap — MapListAsDataFrame","text":"Convenience function concatenating list data.frames single data.frame. used simplify output BascetAggregateMap Convenience function; alternative somehow implement .data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function for concatenating a list of data.frames into a single data.frame. To be used to simplify the output of BascetAggregateMap — MapListAsDataFrame","text":"","code":"MapListAsDataFrame(mylist)  MapListAsDataFrame(mylist)"},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function for concatenating a list of data.frames into a single data.frame. To be used to simplify the output of BascetAggregateMap — MapListAsDataFrame","text":"data.frame TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Bascet, prepare it for reading individual files — OpenBascet","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"TODO current code based pure R, efficient calls can made future. thus advise direct zip-file manipulation guarantee future support ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"","code":"OpenBascet(bascetRoot, bascetName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"bascetRoot root folder Bascets stored","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"handle Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"Plot histogram, loaded ReadHistogram","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"","code":"PlotHistogram(dat)"},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"Read count matrix produced Bascet (hdf5 format)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"","code":"ReadBascetCountMatrix(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"fname Full name hdf5 count matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"Count matrix sparseMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"Read KRAKEN2 count matrix produced Bascet (hdf5 format)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"","code":"ReadBascetKrakenMatrix(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"fname Full name HDF5 count matrix file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"Counts sparseMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"Read count histogram associated Bascet. Bascets one, typically produced debarcoding","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"","code":"ReadHistogram(bascetRoot, inputName, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"Histogram data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"Take KRAKEN2 count matrix column taxonomyID. Convert matrix columns instead names taxonomy. Unused taxonomyID columns kept","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"","code":"SetTaxonomyNamesFeatures(mat, keep_species_only = TRUE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"mat description keep_species_only description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"named count matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a runner that submits jobs to SLURM — SlurmRunner","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"Create runner submits jobs SLURM","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"","code":"SlurmRunner(   settings = NULL,   ncpu = NULL,   partition = NULL,   account = NULL,   time = NULL,   prepend = NULL,   mem = NULL )"},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"settings Default settings override; can NULL ncpu description partition description account description time time job allowed run, e.g. \"0-72:00:00\" prepend description mem description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"SLURM runner","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"TODO raw? wrap bascet?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"","code":"TabixGetFragmentsSeqs(fragpath, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"raw result tabix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Bascet instance works — TestBascetInstance","title":"Check if a Bascet instance works — TestBascetInstance","text":"Check Bascet instance works","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Bascet instance works — TestBascetInstance","text":"","code":"TestBascetInstance(bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Bascet instance works — TestBascetInstance","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","title":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","text":"Callback function aggregating min-hashes cell called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","text":"","code":"aggr.minhash(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","text":"Minhash data (minhash.txt) cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"Callback function aggregating QUAST data. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"","code":"aggr.quast(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"QUAST data cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":null,"dir":"Reference","previous_headings":"","what":"The default Bascet installation settings — bascet_instance.default","title":"The default Bascet installation settings — bascet_instance.default","text":"default Bascet installation settings","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default Bascet installation settings — bascet_instance.default","text":"","code":"bascet_instance.default"},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default Bascet installation settings — bascet_instance.default","text":"object class BascetInstance length 1.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default Bascet installation settings — bascet_instance.default","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/detect_shards_for_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","title":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","text":"Helper function: Figure shards belong together given root input name extension .e. root/name.##.ext","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/detect_shards_for_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","text":"","code":"detect_shards_for_file(bascetRoot, inputName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetImageInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetImageInstance","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetImageInstance","text":"TODO managed Bascet mapshard system, automatic input conversion. unaligned file made temp removed","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetImageInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetImageInstance","text":"","code":"getBascetImageInstance(store_at = \"./\", tempdir = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetImageInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetImageInstance","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/make_output_shard_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","title":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","text":"Helper function: Generate suitable output filenames according shard system .e. root/name.##.ext","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/make_output_shard_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","text":"","code":"make_output_shard_names(bascetRoot, outputName, ext, num_shards)"},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_bash_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","title":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","text":"Helper function: Create array values bash scripts","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_bash_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","text":"","code":"shellscript_make_bash_array(variable, vals)"},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"Function template, basic parameter documentation can obtained ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"","code":"template_BascetFunction(   bascetRoot,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API num_output_shards Number output shards, .e., many output files split data ? (>=1) includeCells List cells process bascetFile Handle opened Bascet file cellID ID cell (string) verbose description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"job executed","code":""}]
