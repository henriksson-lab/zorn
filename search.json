[{"path":"https://henriksson-lab.github.io/zorn/articles/alignment.html","id":"host-filtering-workflow","dir":"Articles","previous_headings":"","what":"Host filtering workflow","title":"Alignment-based workflow","text":"","code":"BascetFilterAlignment(   bascetRoot,   outputName=\"filter_paired\",   keep_mapped=TRUE )"},{"path":"https://henriksson-lab.github.io/zorn/articles/alignment.html","id":"counting-workflow","dir":"Articles","previous_headings":"","what":"Counting workflow","title":"Alignment-based workflow","text":"want analyze reads mapped, either RNA-seq counting genes, generally, count within genomic region, can use Signac great flexibility task. Signac designed analyze single-cell ATAC-seq data, reads stored specialized BED-file. can use command generate file. Note one caveat: depending chemistry, workflow may handle UMIs, just report raw read counts. However, quick dirty operations typically enough. (SLURM-compatible step) just want get number reads per chromosome (.e. compare metagenomic sample number defined strains), provide simpler counter. output small matrix can load Seurat: (SLURM-compatible step)","code":"### Generate fragments BED file suited for quantifying reads/chromosome using Signac later  BascetBam2Fragments(   bascetRoot ) ### Count reads per chromosome BascetCountChrom(   bascetRoot )"},{"path":"https://henriksson-lab.github.io/zorn/articles/debarcoding.html","id":"additional-trimming","dir":"Articles","previous_headings":"","what":"Additional trimming","title":"Debarcoding and sharding","text":"Bascet rudimentary trimming. recommend trimming reads . , first convert data FASTQ format: Now use FASTP perform trimming: plan perform alignment, resulting fastp FASTQ files can used input (don’t forget specify inputName=“fastp”!). want instead get TIRP file, can convert back: now TIRP file , equivalent first shardified output. Don’t forget specify inputName=“new_filtered” later commands, default use “filtered”","code":"### Get reads in fastq format BascetMapTransform(   bascetRoot,   inputName=\"filtered\",   #default; can omit   outputName=\"asfq\",     out_format=\"R1.fq.gz\" ) ### Get reads in fastq format for BWA BascetRunFASTP(   bascetRoot,   numLocalThreads=10,   inputName=\"asfq\",   outputName=\"fastp\" ) BascetMapTransform(   bascetRoot,   \"fastp\",   \"new_filtered\",   out_format=\"tirp.gz\" )"},{"path":"https://henriksson-lab.github.io/zorn/articles/debarcoding.html","id":"onward","dir":"Articles","previous_headings":"","what":"Onward","title":"Debarcoding and sharding","text":"make passed one heaviest critical steps workflow! proceed depends use case. single-cell metagenomics sample unknown composition recommend KRAKEN2 workflow next.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/example_data.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated data","title":"Example data","text":"test pipeline, prepared simulated dataset (TODO upload) can also simulate data, , e.g., check performance genomes might expect sample. can useful power calculations/estimation. See Zorn github repo. Note simulation scripts developers primarily, likely rough corners. Please get touch need need directions use code.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/example_data.html","id":"real-data","dir":"Articles","previous_headings":"","what":"Real data","title":"Example data","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/fileformats.html","id":"bascet-tirp--tirp-gz","dir":"Articles","previous_headings":"","what":"Bascet-TIRP (.tirp.gz)","title":"Overview of File formats","text":"TIRP (Tabix-indexed read pairs) bgzip’ed text file following columns, separated tab: Name cell 1 (start position tabix format; ignored) 1 (end position tabix format; ignored) R1 sequence R2 sequence R1 quality score R2 quality score UMI exception right debarcoding, TIRPs always sorted name cell. indexed using tabix. means can retrieve list cells file using tabix tool, advise use higher level wrappers Zorn/Bascet get locked file format. optional read count histogram can stored file: xxx.tirp.gz.hist","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/fileformats.html","id":"bascet-zip--zip","dir":"Articles","previous_headings":"","what":"Bascet-ZIP (.zip)","title":"Overview of File formats","text":"use zip files means storing general data. conventions: File Y cell XX stored XX/Y cells reads, stored XX/r1.fq XX/r2.fq cell contigs, stored XX/contigs.fa file XX/_mapcell.log output mapcell script Overall, files named XX/YY reserved special output future tools. Thus avoid storing files starting  name","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/fileformats.html","id":"bascet-fastq--r1-fq-gz-and--r2-fq-gz","dir":"Articles","previous_headings":"","what":"Bascet-FASTQ (.R1.fq.gz and .R2.fq.gz)","title":"Overview of File formats","text":"tools require FASTQ input output. keep track cell origin reads, reads special naming convention: “BASCET_” cellID “:” UMI “:” read_number “:” read_index * cellID name cell. FASTQ supports characters, names mangled future (implemented) * UMI unique molecular identifier * read_number just number, number R1 R2. can used track read correspondence reads filtered, multimapped etc. * read_index 1 2, R1 R2 Reads Bascet-FASTQ typically sorted cellID, read_number read_index, order. makes easy read reads one cell without scan entire file.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/fileformats.html","id":"bascet-bam--bam","dir":"Articles","previous_headings":"","what":"Bascet-BAM (.bam)","title":"Overview of File formats","text":"keep track cellular origin, reads BAM files typically follow naming convention Bascet-FASTQ. Thus, running aligner Bascet-FASTQ result valid Bascet-BAM. support tools, reads may also annotated using tags. read names named according FASTQ scheme, .e, start “BASCET_”, tools must instead scan tags: @CB:Z:…. cell_ID @UB:Z….. UMI similar CellRanger annotation (https://www.10xgenomics.com/support/software/cell-ranger/7.2/analysis/outputs/cr-outputs-bam), except Bascet tags yet---corrected cell IDs UMIs.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/fileformats.html","id":"bascet-kraken5--kraken5","dir":"Articles","previous_headings":"","what":"Bascet-KRAKEN5 (.kraken5)","title":"Overview of File formats","text":"sparse matrix HDF5 file, aimed store counts KRAKEN2. KRAKEN2 outputs taxonomy IDs (starting 0), used column indices matrix format. details follow","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/fileformats.html","id":"bascet-hdf5--hd5","dir":"Articles","previous_headings":"","what":"Bascet-HDF5 (.hd5)","title":"Overview of File formats","text":"format loosely implements Anndata count matrix format (https://anndata.readthedocs.io). accommodate needs store types data, files likely deviate standard future. Thus, expect able load regular anndata-compatible software. details follow","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/for_developers.html","id":"compiling-bascet","dir":"Articles","previous_headings":"","what":"Compiling Bascet","title":"Installation","text":"Bascet located separate Github repository first need download rust download Bascet get Rust dependencies: compile Bascet, just run “make” whenever make change:","code":"git clone https://github.com/henriksson-lab/bascet.git    #or: git clone git@github.com:henriksson-lab/bascet.git     cd bascet make install_rust  #this will install rust nightly build -- only need to do this once cd bascet make"},{"path":"https://henriksson-lab.github.io/zorn/articles/for_developers.html","id":"editing-the-bascet-code","dir":"Articles","previous_headings":"","what":"Editing the Bascet code","title":"Installation","text":"modify code, recommend VSCode particular, install rust code extensions. setup enables see compile errors get hints coding!","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/for_developers.html","id":"accessing-a-locally-compiled-bascet-in-zorn","dir":"Articles","previous_headings":"","what":"Accessing a locally compiled Bascet in Zorn","title":"Installation","text":"can link Rust binary: want access software Docker/Singularity, can also pass image; Bascet present, providing absolute path like override .","code":"bascet_instance.default <- BascetInstance(   bin=\"/path/to/bascet/target/debug/bascet\",   tempdir=\"./\" )"},{"path":"https://henriksson-lab.github.io/zorn/articles/genome_annotation.html","id":"quast","dir":"Articles","previous_headings":"","what":"QUAST","title":"Genome annotation tools","text":"First run QUAST cells: (SLURM-compatible step) aggregate results visualization. example caches result speed reloading; optional","code":"BascetMapCell(   bascetRoot,   withfunction = \"_quast\",   inputName = \"skesa\",  #or other source of contigs   outputName = \"quast\" ) quast_aggr <- BascetCacheComputation(bascetRoot,\"cache_quast\",MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   \"quast\",   aggr.quast )))"},{"path":"https://henriksson-lab.github.io/zorn/articles/genome_annotation.html","id":"abricate","dir":"Articles","previous_headings":"","what":"Abricate","title":"Genome annotation tools","text":"First run Abricate cells. NCBI database used default. See ListDatabaseAbricate() list databases (SLURM-compatible step) aggregate results visualization. example caches result speed reloading; optional","code":"BascetMapCellAbricate(   bascetRoot,   inputName = \"skesa\"  #or other source of contigs ) quast_aggr <- BascetCacheComputation(bascetRoot,\"cache_abricate\",MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   \"abricate\",   aggr.abricate )))"},{"path":"https://henriksson-lab.github.io/zorn/articles/genome_annotation.html","id":"bakta","dir":"Articles","previous_headings":"","what":"Bakta","title":"Genome annotation tools","text":"First download database: can run run Bakta cells: (SLURM-compatible step) aggregate results visualization. example caches result speed reloading; optional","code":"DownloadDatabaseBakta(   dbdir=\"~/bakta\",  #create directory before running command   dbtype=\"light\" ) ### .... BascetMapCellBakta(   bascetRoot,   db = \"~/bakta\",   inputName = \"skesa\",  #or other source of contigs ) quast_aggr <- BascetCacheComputation(bascetRoot,\"cache_bakta\",MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   \"bakta\",   aggr.bakta )))"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"accessing-bascet-via-singularity","dir":"Articles","previous_headings":"","what":"Accessing Bascet via Singularity","title":"Installation","text":"First install Singularity installed, Zorn can pull latest Singularity image . recommend keeping separate directory workspace, multiple workspaces can share image","code":"bascet_instance.default <- getBascetSingularityImage(store_at=\"/somewhere/on/your/disk/\")"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"accessing-bascet-via-docker","dir":"Articles","previous_headings":"","what":"Accessing Bascet via Docker","title":"Installation","text":"First install Docker installed, Zorn can pull latest Docker image . recommend keeping separate directory workspace, multiple workspaces can share image","code":"bascet_instance.default <- getBascetDockerImage(store_at=\"/somewhere/on/your/disk/\")"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"testing-the-installation","dir":"Articles","previous_headings":"","what":"Testing the installation","title":"Installation","text":"Run following see get “ok” proceeding:","code":"TestBascetInstance(bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"using-the-bascet-instance","dir":"Articles","previous_headings":"","what":"Using the Bascet instance","title":"Installation","text":"need pass bascet_inst variable Zorn command requires . singularity image cached, run , instead use previous image. need delete manually wish replace .","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"for-developers-accessing-a-locally-compiled-bascet","dir":"Articles","previous_headings":"","what":"For developers: Accessing a locally compiled Bascet","title":"Installation","text":"See separate page","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/isolates.html","id":"if-you-have-a-few-input-fastq-or-fasta-files","dir":"Articles","previous_headings":"","what":"If you have a few input FASTQ or FASTA files","title":"Isolate analysis","text":"two special file formats, “list-fastq” “list-fasta”, TSV simply consists * name sample * Links raw FASTQ-files FASTA-files file can used place Bascet TIRP ZIP-file, e.g., source filtered reads. effect, skip debarcoding sharding. TODO file format example","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/isolates.html","id":"if-you-have-really-many-fastafastq-files","dir":"Articles","previous_headings":"","what":"If you have really many FASTA/FASTQ files","title":"Isolate analysis","text":"case recommend produce TIRP files , way makes sense based infrastructure. See section file formats learn produce . can easily append one input file another, thus avoid need keep files disk time.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/isolates.html","id":"mixing-single-cell-and-bulk-samples","dir":"Articles","previous_headings":"","what":"Mixing single-cell and bulk samples","title":"Isolate analysis","text":"Bascet currently support multiple input file formats given stage; .e. filtered reads, must TIRP format, another format. easiest way mix samples 1. Perform debarcoding sharding single-cell data TIRP 2. separate working directory bulk data, use Bascet transform convert list-FASTQ/FASTA TIRP 3. Copy bulk TIRP filtered.xxx.tirp.gz single-cell directory, xxx next number current single-cell shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"running-a-map-function","dir":"Articles","previous_headings":"","what":"Running a MAP function","title":"Map scripts","text":"Zorn/Bascet designed let run kinds software operates cells. can either raw reads, contigs, data produce. operations can computationally intense, happens MAP framework. example invoking built-QUAST script produce quality metrics assembled genome: (SLURM-compatible step)","code":"BascetMapCell(   bascetRoot,   withfunction = \"_quast\",   inputName = \"skesa\",   outputName = \"quast\" )"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"aggregating-map-results","dir":"Articles","previous_headings":"","what":"Aggregating MAP results","title":"Map scripts","text":"run map function, likely want load results R. call procedure “aggregate”. case QUAST, procedure loads quality metrics R data.frame object:","code":"quast_aggr <- MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   inputName=\"quast\",   aggr.quast ))"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"arguments-to-map-functions","dir":"Articles","previous_headings":"","what":"Arguments to MAP functions","title":"Map scripts","text":"scripts require additional arguments sent (link database file). done setting args argument. set two environment variables contents can picked script:","code":"BascetMapCell(   ...   args(DB=\"some/path\",OTHERARG=\"hi\")   ... )"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"custom-map-functions---introduction","dir":"Articles","previous_headings":"","what":"Custom MAP functions - introduction","title":"Map scripts","text":"easy add new functions! Easiest way simply copy modify code existing script. can start either * QUAST, takes contigs input * SKESA, takes FASTQ input written script, invoke direct path: cases want write aggregate function. function take output tool, parse , put sensible R object. look example existing aggregate functions inspiration. also catch-aggregate function requires bit special way calling. example takes “.txt”, generated tool, stores raw file content list. pretty may help debugging development:","code":"BascetMapCell(   bascetRoot,   withfunction = \"/path/to/your/script.sh\",   inputName = \"...\",   outputName = \"...\" ) quast_aggr <- MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   inputName=\"..\",   aggr.raw(\"out.txt\") ))"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"custom-map-functions---details","dir":"Articles","previous_headings":"","what":"Custom MAP functions - details","title":"Map scripts","text":"look example MAP function, find BASH script conforms certain pattern. actually just script (language) takes certain command line arguments. script returns API version, also validating valid script MAP calls script returns list files extract Bascet, cell. , “*” means get everything. Asking less means higher performance –missing-file-mode Bascet files missing. “skip” means just proceed next cell compress output files. “default” means compress. However, tool generates compressed files already, just waste time trying , case script can return “uncompressed”. directory input files located store output . directory already created many threads use particular process. Note Bascet already calling multiple MAP scripts parallel thus typically little benefit making individual process multithreaded Return many threads (least 1) job get. used user runs mapcell specifies total number threads. Bascet try allocate workers accordingly. Return 1 mapcell script support multithreading called , check script needed software dependencies. case, returns “MAPCELL-CHECK”","code":"--bascet-api --expect-files  --compression-mode --input-dir XXX --output-dir YYY --num-threads ZZZ --recommend-threads --preflight-check"},{"path":"https://henriksson-lab.github.io/zorn/articles/read_quality_control.html","id":"fastqc","dir":"Articles","previous_headings":"","what":"FASTQC","title":"Read-based quality control","text":"(move another section?) want run QC cells whole, get average picture, simply run FASTQC reads transformation FASTQ: can also run FASTQC individual cell, case need convert FASTQ . takes fair bit time, can help tell , e.g., cluster cells caused technical issues adapter content. first run FASTQC mapcell: (SLURM-compatible step) outlier cell dataset, can investigate FASTQ HTML report follow manner (opening RShiny plot pane, separate browser): can also compare cells aggregating data. Note FASTQC creates rather complex statistics need extraction simple plotting One relevant statistic adapter content across read: can also retrieve table pass/fail statistics: many things can statistics, provide general interface table FASTQC generates: Possible values section : “Basic Statistics” “Per base sequence quality” “Per sequence quality scores” “Per base sequence content” “Per sequence GC content” “Per base N content” “Sequence Length Distribution” “Sequence Duplication Levels” “Overrepresented sequences” “Adapter Content”","code":"### Get reads in fastq format BascetMapTransform(   bascetRoot,   inputName=\"filtered\",      outputName=\"asfq\",         out_format=\"R1.fq.gz\" ) BascetMapCellFASTQ(   bascetRoot,   inputName = \"filtered\"  #or other source of reads ) BascetMapCellFASTQ(   bascetRoot,   inputName = \"filtered\"  #or other source of reads ) ShowFASTQCforCell(     bascetFile,      cellID=\"xyz\", #name of your cell      readnum=\"1\", #for R1 ) aggr_fastqc <- BascetAggregateFASTQC(   bascetRoot ) PlotFASTQCadapterContent <- function(     aggr_fastqc,     readnum=\"1\" #for R1 ) fastqc_passfail <- GetFASTQCpassfailStats(     aggr_fastqc,     readnum=\"1\" #for R1 ) mystats <- GetFASTQCassembledDF(     aggr_fastqc,      section=\"see below\",      readnum=\"1\" )"},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using SLURM","text":"Zorn designed full replacement NextFlow job manager, processing single-cell genomics microbial isolates. design motivated Bascet file format: NextFlow operates file--file basis, Bascet keeps cells together sharded objects. natural minibatches otherwise rather small tasks, reducing overhead scheduling work (possibly many!) cells. SLURM one common job managers , Zorn thus works top SLURM writing appropriate Bascet commands. SLURM cluster, interested hear else people using!","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Using SLURM","text":"use SLURM, get used slightly different semantics run locally. First need set runner. way recommend , default values, partition submit , name account. can also set permissible default timeout time: make calls Bascet tutorials. difference pass reference SLURM. also pass job-specific settings related number CPUs memory per node. likely want tune SLURM job bit terms many cores used. suggested method, relevant settings overridden per-job basis: major difference vs typical local runner function now return immediately (asynchronous execution), compared usual local runner. means can keep working R task done, set parallel jobs (named differently). todo – runner can made block default; add option want schedule series tasks, common, can use WaitForJob command pause R done. Putting -commands let batch tasks. main script, charge control flow, run tmux screen, login node cluster. can press ctrl+c end waiting loop early.","code":"## Set the new default runner. Note that the name should not be changed! bascet_runner.default <- SlurmRunner(   partition=\"shared\",    account=\"name_of_your_project\",    time=\"0-24:00:00\" )  ## get a Bascet instance as usual; this is a separate concern from the runner bascet_instance.default <- getBascetSingularityImage(store_at=\"~/\") my_job <- BascetGetRawAtrandiWGS(   bascetRoot,   rawmeta,   #runner= # the default is to take whatever is set in bascet_runner.default ) my_job <- BascetGetRawAtrandiWGS(   bascetRoot,   rawmeta,   runner=SlurmRunner(     bascet_runner.default,     ncpu=5,     mem=\"5g\") ) WaitForJob(my_job)"},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"job-status","dir":"Articles","previous_headings":"","what":"Job status","title":"Using SLURM","text":"todo","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"slurm-settings","dir":"Articles","previous_headings":"","what":"SLURM settings","title":"Using SLURM","text":"unable give specific suggestions cpu memory depends SLURM instance configured. example, Swedish clusters set give memory proportion number CPUs. Bascet written avoid using large amounts RAM possible. Exceptions use downstream software KRAKEN (particular). operations multithreaded benefit CPUs per node. Speed however limited disk access speed. thus worth investigating log files execution see much CPU/memory actually needed, improve long-term running Bascet.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/snp_analysis.html","id":"snp-calling","dir":"Articles","previous_headings":"","what":"SNP-calling","title":"SNP analysis","text":"Generate FASTQ-files alignment (SLURM-compatible step) Align reads using STAR (BWA): (SLURM-compatible step)","code":"###TODO ###TODO"},{"path":"https://henriksson-lab.github.io/zorn/articles/snp_analysis.html","id":"detect-known-snps","dir":"Articles","previous_headings":"","what":"Detect known SNPs","title":"SNP analysis","text":"workflow useful wish perform SNP-based donor deconvolution using Vireo. Vireo workflow recommends obtaining pre-processed SNP list. Given VCF-file, containing curated SNPs, can run following command aligned reads (internally using cellsnp-lite): (SLURM-compatible step)","code":"#TODO r command #TODO option to not use UMI  #pip install -U vireoSNP  cellsnp-lite -s $BAM -b $BARCODE -O $OUT_DIR -R $REGION_VCF -p 10 --minMAF 0.1 --minCOUNT 20 --gzip  # https://cellsnp-lite.readthedocs.io/en/latest/"},{"path":"https://henriksson-lab.github.io/zorn/articles/snp_analysis.html","id":"detect-unknown-snps","dir":"Articles","previous_headings":"","what":"Detect unknown SNPs","title":"SNP analysis","text":"","code":"#TODO r command #TODO option to not use UMI cellsnp-lite -s $BAM -b $BARCODE -O $OUT_DIR -p 10 --minMAF 0.1 --minCOUNT 100 --gzip"},{"path":"https://henriksson-lab.github.io/zorn/articles/snp_analysis.html","id":"performing-snp-based-donor-deconvolution","dir":"Articles","previous_headings":"","what":"Performing SNP-based donor deconvolution","title":"SNP analysis","text":"workflow relies Vireo. TODO option provide donor genotype file","code":""},{"path":[]},{"path":"https://henriksson-lab.github.io/zorn/articles/snp_analysis.html","id":"citing","dir":"Articles","previous_headings":"","what":"Citing","title":"SNP analysis","text":"addition citing Zorn/Bascet, please also cite following tools wraps: Xianjie Huang, Yuanhua Huang, Cellsnp-lite: efficient tool genotyping single cells, Bioinformatics, Volume 37, Issue 23, December 2021, Pages 4569–4571, https://doi.org/10.1093/bioinformatics/btab358","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/tcr_analysis.html","id":"install-trust4","dir":"Articles","previous_headings":"","what":"Install TRUST4","title":"TCR/BCR analysis","text":"TRUST4 part Bascet container (source). However, need provide ","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/tcr_analysis.html","id":"the-tcrbcr-workflow","dir":"Articles","previous_headings":"","what":"The TCR/BCR workflow","title":"TCR/BCR analysis","text":"Generate FASTQ-files alignment (SLURM-compatible step) Align reads using STAR (BWA): (SLURM-compatible step) Run TRUST4 aligned reads: (SLURM-compatible step) can now load extracted sequences R:","code":"###TODO ###TODO #TODO run-trust4 -b foo.bam -f human_IMGT+C.fa --barcode BC --UMI UMI -t 10 #TODO"},{"path":"https://henriksson-lab.github.io/zorn/articles/tcr_analysis.html","id":"citing","dir":"Articles","previous_headings":"","what":"Citing","title":"TCR/BCR analysis","text":"use TRUST4, cite addition Zorn/Bascet https://www.nature.com/articles/s41592-021-01142-2 Song, L., Cohen, D., Ouyang, Z. et al. TRUST4: immune repertoire reconstruction bulk single-cell RNA-seq data. Nat Methods (2021). https://doi.org/10.1038/s41592-021-01142-2","code":""},{"path":"https://henriksson-lab.github.io/zorn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Henriksson. Author, maintainer. Laura Carroll. Author. Hadrien Gourlé. Author. Julian Dicken. Author. Henriksson Lab, Carroll Lab Collaborators. Funder.","code":""},{"path":"https://henriksson-lab.github.io/zorn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"xxx et al. Scalable single-cell metagenomic analysis Bascet Zorn. Biorxiv (2025)","code":"@Article{,   author = {{todo} and Laura Carroll and Johan Henriksson},   title = {Scalable single-cell metagenomic analysis with Bascet and Zorn},   journal = {Biorxiv},   year = {2025},   doi = {todo},   url = {https://todo}, }"},{"path":"https://henriksson-lab.github.io/zorn/index.html","id":"zorn","dir":"","previous_headings":"","what":"Zorn","title":"An all-purpose solution for processing of single-cell microbial data","text":"proud announce Zorn, R package workflow manager scalable single-cell analysis! install package, see install page.","code":""},{"path":"https://henriksson-lab.github.io/zorn/index.html","id":"about-zorn","dir":"","previous_headings":"","what":"About Zorn","title":"An all-purpose solution for processing of single-cell microbial data","text":"Zorn R package designed use Zorn research, please cite: (TODO) Zorn developed maintained Henriksson Carroll labs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate frequency of minhashes across cells — AggregateMinhashes","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"Aggregate frequency minhashes across cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"","code":"AggregateMinhashes(bascetRoot, inputName = \"minhash\", bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"bascetRoot root folder Bascets stored inputName description bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"command assumes cells named follows: well1_well2_well3_well4, e.g. well1 format G12","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"","code":"AtrandiBarcodeStats(   bascetRoot,   inputName = \"debarcoded\",   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"Produce matrix Barnyard plots, .e., counts one species vs another, combinations species.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"","code":"BarnyardPlotMatrix(adata)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"adata Seurat object DefaultAssay set species count","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"ggarranged set ggplots","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/Bascet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A bascet, along with all the shards — Bascet-class","title":"A bascet, along with all the shards — Bascet-class","text":"bascet, along shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateAMRfinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from AMRfinder This is a thin wrapper around BascetAggregateMap — BascetAggregateAMRfinder","title":"Aggregate data from AMRfinder This is a thin wrapper around BascetAggregateMap — BascetAggregateAMRfinder","text":"Aggregate data AMRfinder thin wrapper around BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateAMRfinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from AMRfinder This is a thin wrapper around BascetAggregateMap — BascetAggregateAMRfinder","text":"","code":"BascetAggregateAMRfinder(   bascetRoot,   inputName = \"AMRfinder\",   include_cells = NULL,   get_column = \"Element.symbol\",   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateAbricate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from Abricate This is a thin wrapper around BascetAggregateMap — BascetAggregateAbricate","title":"Aggregate data from Abricate This is a thin wrapper around BascetAggregateMap — BascetAggregateAbricate","text":"Aggregate data Abricate thin wrapper around BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateAbricate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from Abricate This is a thin wrapper around BascetAggregateMap — BascetAggregateAbricate","text":"","code":"BascetAggregateAbricate(   bascetRoot,   inputName = \"abricate\",   include_cells = NULL,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateFASTQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from FASTQC This is a thin wrapper around BascetAggregateMap — BascetAggregateFASTQC","title":"Aggregate data from FASTQC This is a thin wrapper around BascetAggregateMap — BascetAggregateFASTQC","text":"Aggregate data FASTQC thin wrapper around BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateFASTQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from FASTQC This is a thin wrapper around BascetAggregateMap — BascetAggregateFASTQC","text":"","code":"BascetAggregateFASTQC(   bascetRoot,   inputName = \"fastqc\",   include_cells = NULL,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from previous Map call — BascetAggregateMap","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"todo: allow multi-cpu support? parallel library todo note, effectively pure-R map function. different name?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"","code":"BascetAggregateMap(   bascetRoot,   bascetName,   aggrFunction,   include_cells = NULL,   showProgress = TRUE,   verbose = FALSE,   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":null,"dir":"Reference","previous_headings":"","what":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"TODO managed Bascet mapshard system, automatic input conversion. unaligned file made temp removed","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"","code":"BascetAlignToReference(   bascetRoot,   useReference,   numLocalThreads = 1,   inputName = \"asfq\",   outputNameBAMunsorted = \"unsorted_aligned\",   outputNameBAMsorted = \"aligned\",   do_sort = TRUE,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"useReference Name BWA reference use numLocalThreads Number threads use runner outputNameBAMunsorted Name unsorted BAMs outputNameBAMsorted Name sorted BAMs (generated) do_sort Whether sort output ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignmentToBigwig.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","title":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","text":"function mainly QC purposes. uses bamCoverage deepTools apt install python3-deeptools","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignmentToBigwig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","text":"","code":"BascetAlignmentToBigwig(   bascetRoot,   inputName = \"aligned\",   outputName = \"pileup\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignmentToBigwig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","text":"outputName Name output file (BIGWIG-file)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"Take aligned BAM file produce Fragments.tsv.gz, compatible Signac ATAC-seq style analysis","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"","code":"BascetBam2Fragments(   bascetRoot,   inputName = \"aligned\",   outputName = \"fragments\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"job, producing type Fragments.tsv.gz","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCacheComputation.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper to cache a computation. Put your function in as an argument, as R will only compute its value if needed. If the cache file exist, it will not be run again — BascetCacheComputation","title":"A wrapper to cache a computation. Put your function in as an argument, as R will only compute its value if needed. If the cache file exist, it will not be run again — BascetCacheComputation","text":"wrapper cache computation. Put function argument, R compute value needed. cache file exist, run ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCacheComputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper to cache a computation. Put your function in as an argument, as R will only compute its value if needed. If the cache file exist, it will not be run again — BascetCacheComputation","text":"","code":"BascetCacheComputation(bascetRoot, fname, value)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCacheComputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper to cache a computation. Put your function in as an argument, as R will only compute its value if needed. If the cache file exist, it will not be run again — BascetCacheComputation","text":"fname Name file store cache . extension .RDS added automatically","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCacheComputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper to cache a computation. Put your function in as an argument, as R will only compute its value if needed. If the cache file exist, it will not be run again — BascetCacheComputation","text":"value","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of cells in a Bascet — BascetCellNames","title":"Get list of cells in a Bascet — BascetCellNames","text":"Get list cells Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of cells in a Bascet — BascetCellNames","text":"","code":"BascetCellNames(bascetRoot, bascetName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of cells in a Bascet — BascetCellNames","text":"bascetRoot root folder Bascets stored bascetName Name bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of cells in a Bascet — BascetCellNames","text":"Vector cell names strings","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeCountSketch.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute count sketch for each cell. This is a thin wrapper around BascetMapCell — BascetComputeCountSketch","title":"Compute count sketch for each cell. This is a thin wrapper around BascetMapCell — BascetComputeCountSketch","text":"Compute count sketch cell. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeCountSketch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute count sketch for each cell. This is a thin wrapper around BascetMapCell — BascetComputeCountSketch","text":"","code":"BascetComputeCountSketch(   bascetRoot,   inputName = \"filtered\",   outputName = \"countsketch\",   overwrite = FALSE,   max_reads = 1e+05,   kmer_size = 31,   sketch_size = 5000,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeCountSketch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute count sketch for each cell. This is a thin wrapper around BascetMapCell — BascetComputeCountSketch","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeCountSketch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute count sketch for each cell. This is a thin wrapper around BascetMapCell — BascetComputeCountSketch","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"Compute minhashes cell. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"","code":"BascetComputeMinhash(   bascetRoot,   inputName = \"filtered\",   outputName = \"minhash\",   overwrite = FALSE,   max_reads = 1e+05,   kmer_size = 31,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":null,"dir":"Reference","previous_headings":"","what":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"aligned BAM file, compute counts per chromosome","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"","code":"BascetCountChrom(   bascetRoot,   inputName = \"aligned\",   outputName = \"chromcount\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"job, executing counting","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"CHANGED: just sums kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"","code":"BascetFeaturiseKMC(   bascetRoot,   inputName = \"kmc\",   outputName = \"sumkmers\",   includeCells = NULL,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"bascetRoot root folder Bascets stored includeCells List cells process runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter an alignment (BAM-file). — BascetFilterAlignment","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"typically used either remove host DNA, keep reads mapping known reference","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"","code":"BascetFilterAlignment(   bascetRoot,   numLocalThreads = 1,   inputName,   outputName,   keep_mapped = FALSE,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"numLocalThreads Number threads use runner outputName Name output file (BAM-file) keep_mapped Keep mapped reads (TRUE) unmapped (FALSE)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"BAM-file paired reads reads need mapped (flag 0x2); otherwise (flag 0x4)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGatherCountSketch.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather all count sketches into a single count sketch matrix — BascetGatherCountSketch","title":"Gather all count sketches into a single count sketch matrix — BascetGatherCountSketch","text":"TODO binary file format","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGatherCountSketch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather all count sketches into a single count sketch matrix — BascetGatherCountSketch","text":"","code":"BascetGatherCountSketch(   bascetRoot,   inputName = \"countsketch\",   outputName = \"countsketch_mat.csv\",   includeCells = NULL,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGatherCountSketch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather all count sketches into a single count sketch matrix — BascetGatherCountSketch","text":"bascetRoot root folder Bascets stored includeCells List cells process runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGatherCountSketch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather all count sketches into a single count sketch matrix — BascetGatherCountSketch","text":"job","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"Generate BAM barcodes input raw FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"","code":"BascetGetRaw(   bascetRoot,   rawmeta,   outputName = \"debarcoded\",   outputNameIncomplete = \"incomplete_reads\",   chemistry = \"atrandi_wgs\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"bascetRoot root folder Bascets stored rawmeta Metadata raw FASTQ input files. See DetectRawFileMeta outputName Name output files: Debarcoded reads outputNameIncomplete Name output files: Reads parsed chemistry type data parsed overwrite description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeBWA.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","title":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","text":"Index genome using BWA can used alignment","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeBWA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","text":"","code":"BascetIndexGenomeBWA(   bascetRoot,   genomeFile,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeBWA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","text":"genomeFile Name FASTA file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeSTAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a genome using STAR such that it can be used for alignment — BascetIndexGenomeSTAR","title":"Index a genome using STAR such that it can be used for alignment — BascetIndexGenomeSTAR","text":"Index genome using STAR can used alignment","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeSTAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a genome using STAR such that it can be used for alignment — BascetIndexGenomeSTAR","text":"","code":"BascetIndexGenomeSTAR(   bascetRoot,   fastaFile,   gtfFile,   outDir,   numLocalThreads = 10,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeSTAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a genome using STAR such that it can be used for alignment — BascetIndexGenomeSTAR","text":"gtfFile description outDir directory store output genome. directory created genomeFile Name FASTA file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new bascet instance. For advanced users only — BascetInstance","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"Create new bascet instance. advanced users ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"","code":"BascetInstance(bin, tempdir, prepend_cmd = \"\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"bin Name binary tempdir Directory store temporary files prepend_cmd Something prepend command, e.g. support container systems","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":null,"dir":"Reference","previous_headings":"","what":"List files for a cell in a Bascet — BascetListFilesForCell","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"can made faster , e.g., reading location objects file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"","code":"BascetListFilesForCell(   bascetFile,   cellID,   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"bascetFile Bascet file object cellID Name cell bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"data.frame list files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetLoadCountSketchMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Load count sketch matrix as Seurat object — BascetLoadCountSketchMatrix","title":"Load count sketch matrix as Seurat object — BascetLoadCountSketchMatrix","text":"Load count sketch matrix Seurat object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetLoadCountSketchMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load count sketch matrix as Seurat object — BascetLoadCountSketchMatrix","text":"","code":"BascetLoadCountSketchMatrix(bascetRoot, inputName = \"countsketch_mat.csv\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetLoadCountSketchMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load count sketch matrix as Seurat object — BascetLoadCountSketchMatrix","text":"seurat object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeKrakenCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","title":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","text":"TODO: run kraken run","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeKrakenCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","text":"","code":"BascetMakeKrakenCountMatrix(   bascetRoot,   numLocalThreads = 1,   inputName = \"kraken_out\",   outputName = \"kraken\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeKrakenCountMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","text":"bascetRoot root folder Bascets stored numLocalThreads description inputName description outputName description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API useKrakenDB description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"Gather minhashes single histogram file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"","code":"BascetMakeMinhashHistogram(   bascetRoot,   inputName = \"minhash\",   outputName = \"minhash_hist.csv\",   includeCells = NULL,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"bascetRoot root folder Bascets stored includeCells List cells process runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"job","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a MAP function for all cells — BascetMapCell","title":"Call a MAP function for all cells — BascetMapCell","text":"","code":"TODO override args docs"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a MAP function for all cells — BascetMapCell","text":"","code":"BascetMapCell(   bascetRoot,   withfunction,   inputName,   outputName,   args = list(),   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a MAP function for all cells — BascetMapCell","text":"args List arguments (key,value) provide script","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAMRfinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Run AMRfinder on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAMRfinder","title":"Run AMRfinder on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAMRfinder","text":"Run AMRfinder contigs cells. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAMRfinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run AMRfinder on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAMRfinder","text":"","code":"BascetMapCellAMRfinder(   bascetRoot,   inputName = \"contigs\",   outputName = \"AMRfinder\",   db,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAMRfinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run AMRfinder on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAMRfinder","text":"bascetRoot root folder Bascets stored db description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAMRfinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run AMRfinder on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAMRfinder","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAbricate.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Abricate on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAbricate","title":"Run Abricate on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAbricate","text":"Run Abricate contigs cells. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAbricate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Abricate on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAbricate","text":"","code":"BascetMapCellAbricate(   bascetRoot,   inputName = \"contigs\",   outputName = \"abricate\",   db = \"ncbi\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAbricate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Abricate on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAbricate","text":"bascetRoot root folder Bascets stored db description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAbricate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Abricate on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAbricate","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAriba.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Ariba on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAriba","title":"Run Ariba on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAriba","text":"Run Ariba reads cells. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAriba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Ariba on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAriba","text":"","code":"BascetMapCellAriba(   bascetRoot,   inputName = \"filtered\",   outputName = \"ariba\",   db,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAriba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Ariba on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAriba","text":"bascetRoot root folder Bascets stored db description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellAriba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Ariba on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellAriba","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellBakta.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Bakta on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellBakta","title":"Run Bakta on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellBakta","text":"Run Bakta contigs cells. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellBakta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Bakta on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellBakta","text":"","code":"BascetMapCellBakta(   bascetRoot,   inputName = \"contigs\",   outputName = \"bakta\",   db,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellBakta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Bakta on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellBakta","text":"bascetRoot root folder Bascets stored db description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellBakta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Bakta on contigs of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellBakta","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellFASTQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FASTQC on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellFASTQC","title":"Run FASTQC on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellFASTQC","text":"Run FASTQC reads cells. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellFASTQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FASTQC on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellFASTQC","text":"","code":"BascetMapCellFASTQC(   bascetRoot,   inputName = \"filtered\",   outputName = \"fastqc\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellFASTQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FASTQC on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellFASTQC","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API db description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCellFASTQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run FASTQC on reads of all cells. This is a thin wrapper around BascetMapCell — BascetMapCellFASTQC","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data — BascetMapTransform","title":"Transform data — BascetMapTransform","text":"command enables subsetting list cells converting file formats merging shards dividing shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data — BascetMapTransform","text":"","code":"BascetMapTransform(   bascetRoot,   inputName,   outputName,   num_divide = 1,   num_merge = 1,   out_format = \"tirp.gz\",   includeCells = NULL,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data — BascetMapTransform","text":"num_divide description num_merge description out_format description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":null,"dir":"Reference","previous_headings":"","what":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"Build count table FASTQ reads list selected kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"","code":"BascetQueryFq(   bascetRoot,   inputName = \"filtered\",   outputName = \"kmer_counts\",   useKMERs,   max_reads = 1e+06,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"bascetRoot root folder Bascets stored useKMERs description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"Build count table kmer table list selected kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"","code":"BascetQueryKMC(   bascetRoot,   inputName = \"kmc\",   outputName = \"kmer\",   useKMERs,   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"bascetRoot root folder Bascets stored useKMERs description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read one file from a Bascet — BascetReadFile","title":"Read one file from a Bascet — BascetReadFile","text":"TODO can made faster , e.g., reading location objects file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read one file from a Bascet — BascetReadFile","text":"","code":"BascetReadFile(   bascetFile,   cellID,   filename,   as = c(\"tempfile\"),   bascet_instance = GetDefaultBascetInstance(),   verbose = FALSE )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read one file from a Bascet — BascetReadFile","text":"bascetFile Handle opened Bascet file cellID ID cell (string) filename description description bascet_instance Configuration run Bascet Rust API verbose description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read one file from a Bascet — BascetReadFile","text":"Name temporary file read content stored","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadMinhashHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Read histogram of KMERs, the output of BascetMakeMinhashHistogram — BascetReadMinhashHistogram","title":"Read histogram of KMERs, the output of BascetMakeMinhashHistogram — BascetReadMinhashHistogram","text":"Read histogram KMERs, output BascetMakeMinhashHistogram","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadMinhashHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read histogram of KMERs, the output of BascetMakeMinhashHistogram — BascetReadMinhashHistogram","text":"","code":"BascetReadMinhashHistogram(bascetRoot, inputName = \"minhash_hist.csv\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadMinhashHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read histogram of KMERs, the output of BascetMakeMinhashHistogram — BascetReadMinhashHistogram","text":"KMER histogram","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunFASTP.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FASTP for each cell. Input must be in FASTQ file format — BascetRunFASTP","title":"Run FASTP for each cell. Input must be in FASTQ file format — BascetRunFASTP","text":"Run FASTP cell. Input must FASTQ file format","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunFASTP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FASTP for each cell. Input must be in FASTQ file format — BascetRunFASTP","text":"","code":"BascetRunFASTP(   bascetRoot,   numLocalThreads = 1,   inputName = \"asfq\",   outputName = \"fastp\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunFASTP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FASTP for each cell. Input must be in FASTQ file format — BascetRunFASTP","text":"useKrakenDB Path KRAKEN2 database","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKraken.html","id":null,"dir":"Reference","previous_headings":"","what":"Run KRAKEN2 for each cell — BascetRunKraken","title":"Run KRAKEN2 for each cell — BascetRunKraken","text":"Run KRAKEN2 cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKraken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run KRAKEN2 for each cell — BascetRunKraken","text":"","code":"BascetRunKraken(   bascetRoot,   useKrakenDB = \"/data/henlab/kraken/standard-8\",   numLocalThreads = 1,   inputName = \"asfq\",   outputName = \"kraken_out\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKraken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run KRAKEN2 for each cell — BascetRunKraken","text":"useKrakenDB Path KRAKEN2 database","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":null,"dir":"Reference","previous_headings":"","what":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"reads one cell guaranteed present single shard. makes parallel processing simple shard can processed separate computer. Using shards means computers can used.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"","code":"BascetShardify(   bascetRoot,   inputName = \"debarcoded\",   includeCells = NULL,   num_output_shards = 1,   outputName = \"filtered\",   overwrite = FALSE,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"inputName Name input file: Debarcoded reads outputName Name output file: Properly sharded debarcoded reads","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"perform calculations single computer, one shard result speedup. option relevant using cluster compute nodes. TODO multiple input samples, way group ? otherwise reading input files needed. said, got index, list cells specified, possible quickly figure file needed merge TODO Figuring file needed can done \"planning\" (Zorn) stage TODO seems faster single merger writes multiple output files cell list provided. overhead accepted read input files discard cells fly","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChooseInformativeKMERs.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — ChooseInformativeKMERs","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — ChooseInformativeKMERs","text":"Pick random KMERs KMC3 database. choice among KMERs within frequency range","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChooseInformativeKMERs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — ChooseInformativeKMERs","text":"","code":"ChooseInformativeKMERs(   kmer_hist,   num_pick = 1000,   minfreq = 0.01,   maxfreq = 0.1 )"},{"path":"https://henriksson-lab.github.io/zorn/reference/ChooseInformativeKMERs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — ChooseInformativeKMERs","text":"num_pick description minfreq description maxfreq description fname description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChooseInformativeKMERs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — ChooseInformativeKMERs","text":"List KMERs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a count matrix on strain level — ChromToSpeciesCount","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"TODO specific?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"","code":"ChromToSpeciesCount(adata, map_seq2strain)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CloseBascet.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a Bascet file. — CloseBascet","title":"Close a Bascet file. — CloseBascet","text":"always performed avoid memory leaks","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CloseBascet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a Bascet file. — CloseBascet","text":"","code":"CloseBascet(bascetFile)"},{"path":"https://henriksson-lab.github.io/zorn/reference/CloseBascet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a Bascet file. — CloseBascet","text":"bascetFile Handle opened Bascet file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CloseBascet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close a Bascet file. — CloseBascet","text":"handle Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountDataFrameToSparseMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Count entries in long format data frame and return as a sparse matrix — CountDataFrameToSparseMatrix","title":"Count entries in long format data frame and return as a sparse matrix — CountDataFrameToSparseMatrix","text":"Count entries long format data frame return sparse matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountDataFrameToSparseMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count entries in long format data frame and return as a sparse matrix — CountDataFrameToSparseMatrix","text":"","code":"CountDataFrameToSparseMatrix(dat, rowname, colname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/CountDataFrameToSparseMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count entries in long format data frame and return as a sparse matrix — CountDataFrameToSparseMatrix","text":"dat data.frame rowname Column use matrix row name colname Column use matrix column name","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountDataFrameToSparseMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count entries in long format data frame and return as a sparse matrix — CountDataFrameToSparseMatrix","text":"dgCMatrix sparse matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"Obtain feature matrix (seurat object) given seurat object Fragments associated","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"","code":"CountGrangeFeatures(adata, grange_gene)"},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"adata Seurat object, FeatureMatrix grange_gene grange object telling count","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"Seurat AssayObject","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CreateSeuratObjectWithReduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a seurat object from e.g. count sketch reduction — CreateSeuratObjectWithReduction","title":"Create a seurat object from e.g. count sketch reduction — CreateSeuratObjectWithReduction","text":"Create seurat object e.g. count sketch reduction","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CreateSeuratObjectWithReduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a seurat object from e.g. count sketch reduction — CreateSeuratObjectWithReduction","text":"","code":"CreateSeuratObjectWithReduction(   Q,   reduction_name = \"kmersketch\",   assay = \"RNA\" )"},{"path":"https://henriksson-lab.github.io/zorn/reference/CreateSeuratObjectWithReduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a seurat object from e.g. count sketch reduction — CreateSeuratObjectWithReduction","text":"Seurat object; make assay?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"_R1 – common illumina sequencer SRR****_1.fastq.gz – typical SRA","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"","code":"DetectRawFileMeta(rawRoot, verbose = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"rawRoot Path folder FASTQ files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"data frame metadata raw input files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"TODO convenient handle multiple samples, sample1/xxx; case, prepend sample name barcodes. issue: shardifying, good keep info merge. reduces work plenty! keep list shards belong next step","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DownloadDatabaseAMRfinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a database for AMRfinder — DownloadDatabaseAMRfinder","title":"Download a database for AMRfinder — DownloadDatabaseAMRfinder","text":"Download database AMRfinder","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DownloadDatabaseAMRfinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a database for AMRfinder — DownloadDatabaseAMRfinder","text":"","code":"DownloadDatabaseAMRfinder(dbdir, bascet_instance = GetDefaultBascetInstance())"},{"path":"https://henriksson-lab.github.io/zorn/reference/DownloadDatabaseAriba.html","id":null,"dir":"Reference","previous_headings":"","what":"Download database for Ariba — DownloadDatabaseAriba","title":"Download database for Ariba — DownloadDatabaseAriba","text":"Download database Ariba","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DownloadDatabaseAriba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download database for Ariba — DownloadDatabaseAriba","text":"","code":"DownloadDatabaseAriba(   dbdir,   ref = \"ncbi\",   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/DownloadDatabaseBakta.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a database for Bakta — DownloadDatabaseBakta","title":"Download a database for Bakta — DownloadDatabaseBakta","text":"Download database Bakta","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DownloadDatabaseBakta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a database for Bakta — DownloadDatabaseBakta","text":"","code":"DownloadDatabaseBakta(   dbdir,   dbtype = c(\"light\", \"full\"),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":null,"dir":"Reference","previous_headings":"","what":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"Signac chromatin assay fragments, cell, count many reads per chromosome","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"","code":"FragmentCountsPerChrom(   chrom_assay,   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"FeatureMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"Signac chromatin assay fragments, cell, count many reads per chromosome. function directly returns assay can added Seurat multimodal object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"","code":"FragmentCountsPerChromAssay(bascetRoot, inputName = \"fragments.1.tsv.gz\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"seurat object holding counts","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":null,"dir":"Reference","previous_headings":"","what":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"Case: tabix command line uses 100% cpu . likely designed large queries","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"","code":"FragmentsToSignac(fragpath)"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"ChromatinAssay","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a temp directory to use; need to be created — GetBascetTempDir","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"Get temp directory use; need created","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"","code":"GetBascetTempDir(bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"path temp directory can created. Must removed done","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetDefaultBascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Bascet instance from global variable — GetDefaultBascetInstance","title":"Get Bascet instance from global variable — GetDefaultBascetInstance","text":"Get Bascet instance global variable","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetDefaultBascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Bascet instance from global variable — GetDefaultBascetInstance","text":"","code":"GetDefaultBascetInstance()"},{"path":"https://henriksson-lab.github.io/zorn/reference/GetDefaultBascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Bascet instance from global variable — GetDefaultBascetInstance","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCassembledDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data frame for one type of FASTQ statistics across across all cells — GetFASTQCassembledDF","title":"Get a data frame for one type of FASTQ statistics across across all cells — GetFASTQCassembledDF","text":"Get data frame one type FASTQ statistics across across cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCassembledDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data frame for one type of FASTQ statistics across across all cells — GetFASTQCassembledDF","text":"","code":"GetFASTQCassembledDF(aggr_fastq_data, section, readnum)"},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCassembledDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a data frame for one type of FASTQ statistics across across all cells — GetFASTQCassembledDF","text":"readnum 1 2, R1 R2","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCassembledDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a data frame for one type of FASTQ statistics across across all cells — GetFASTQCassembledDF","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCpassfailStats.html","id":null,"dir":"Reference","previous_headings":"","what":"From aggregated FASTQC data, get overall statistics for overlay on UMAP etc — GetFASTQCpassfailStats","title":"From aggregated FASTQC data, get overall statistics for overlay on UMAP etc — GetFASTQCpassfailStats","text":"TODO argument giving many cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCpassfailStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From aggregated FASTQC data, get overall statistics for overlay on UMAP etc — GetFASTQCpassfailStats","text":"","code":"GetFASTQCpassfailStats(aggr_fastq_data, readnum)"},{"path":"https://henriksson-lab.github.io/zorn/reference/GetFASTQCpassfailStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From aggregated FASTQC data, get overall statistics for overlay on UMAP etc — GetFASTQCpassfailStats","text":"readnum 1 2, R1 R2","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"Pick random KMERs KMC3 database. choice among KMERs within frequency range","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"","code":"KmcChooseKmerFeatures(fname, num_pick = 1000, minfreq = 0.01, maxfreq = 0.1)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"fname description num_pick description minfreq description maxfreq description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"List KMERs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a histogram from a KMC3 database — KmcGetHistogram","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"Generate histogram KMC3 database","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"","code":"KmcGetHistogram(fname, plot = TRUE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"fname Full name KMC3 database toplot Decide plot return raw data","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"ggplot object toplot=TRUE, otherwise data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get KMERs from a KMC3 database — KmcGetKmers","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"TODO finish properly","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"","code":"KmcGetKmers(fname, mincount = NULL, maxcount = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a kneeplot — KneeplotPerSpecies","title":"Produce a kneeplot — KneeplotPerSpecies","text":"Produce kneeplot","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a kneeplot — KneeplotPerSpecies","text":"","code":"KneeplotPerSpecies(adata, max_species = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a kneeplot — KneeplotPerSpecies","text":"adata description max_species description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a kneeplot — KneeplotPerSpecies","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"KRAKEN2 count matrix, return consensus taxID cell metadata","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"","code":"KrakenFindConsensusTaxonomy(mat)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"mat count matrix, typically sparse format","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"data.frame holding cellID consensus taxID","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Using a KRAKEN2 count matrix, produce a ","title":"Using a KRAKEN2 count matrix, produce a ","text":"Using KRAKEN2 count matrix, produce \"kneeplot\" species","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using a KRAKEN2 count matrix, produce a ","text":"","code":"KrakenSpeciesDistribution(adata, use_assay = \"kraken\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using a KRAKEN2 count matrix, produce a ","text":"adata Seurat object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using a KRAKEN2 count matrix, produce a ","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ListDatabaseAbricate.html","id":null,"dir":"Reference","previous_headings":"","what":"List installed databases available for Abricate — ListDatabaseAbricate","title":"List installed databases available for Abricate — ListDatabaseAbricate","text":"List installed databases available Abricate","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ListDatabaseAbricate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List installed databases available for Abricate — ListDatabaseAbricate","text":"","code":"ListDatabaseAbricate(dbdir, bascet_instance = GetDefaultBascetInstance())"},{"path":"https://henriksson-lab.github.io/zorn/reference/ListDatabaseAbricate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List installed databases available for Abricate — ListDatabaseAbricate","text":"List database names","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new local runner instance — LocalRunner","title":"Create new local runner instance — LocalRunner","text":"Create new local runner instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new local runner instance — LocalRunner","text":"","code":"LocalRunner(maxcpu = \"10\", direct = FALSE, show_script = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new local runner instance — LocalRunner","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapCellMultiListAsDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function; alternative is to somehow implement as.data.frame — MapCellMultiListAsDataFrame","title":"Convenience function; alternative is to somehow implement as.data.frame — MapCellMultiListAsDataFrame","text":"one puts cellID new column","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapCellMultiListAsDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function; alternative is to somehow implement as.data.frame — MapCellMultiListAsDataFrame","text":"","code":"MapCellMultiListAsDataFrame(mylist)"},{"path":"https://henriksson-lab.github.io/zorn/reference/MapCellMultiListAsDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function; alternative is to somehow implement as.data.frame — MapCellMultiListAsDataFrame","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapCellMultiListAsDataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convenience function; alternative is to somehow implement as.data.frame — MapCellMultiListAsDataFrame","text":"make new MapListAsDataFrame ?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","title":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","text":"Convenience function; alternative somehow implement .data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","text":"","code":"MapListAsDataFrame(mylist)"},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/NoRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new No-runner instance. This system is for testing only — NoRunner","title":"Create new No-runner instance. This system is for testing only — NoRunner","text":"Create new -runner instance. system testing ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/NoRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new No-runner instance. This system is for testing only — NoRunner","text":"","code":"NoRunner(show_script = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/NoRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new No-runner instance. This system is for testing only — NoRunner","text":"-runner","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Bascet, prepare it for reading individual files — OpenBascet","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"TODO current code based pure R, efficient calls can made future. thus advise direct zip-file manipulation guarantee future support ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"","code":"OpenBascet(   bascetRoot,   bascetName,   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"bascetRoot root folder Bascets stored bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"handle Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotFASTQCadapterContent.html","id":null,"dir":"Reference","previous_headings":"","what":"From aggregated FASTQC data, plot adapter content — PlotFASTQCadapterContent","title":"From aggregated FASTQC data, plot adapter content — PlotFASTQCadapterContent","text":"TODO giving many cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotFASTQCadapterContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From aggregated FASTQC data, plot adapter content — PlotFASTQCadapterContent","text":"","code":"PlotFASTQCadapterContent(aggr_fastq_data, readnum)"},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotFASTQCadapterContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From aggregated FASTQC data, plot adapter content — PlotFASTQCadapterContent","text":"readnum 1 2, R1 R2","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"Plot histogram, loaded ReadHistogram","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"","code":"PlotHistogram(dat)"},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotJohnsonLindenstraussMinDim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot minimum number of dimensions needed to retain distance between samples — PlotJohnsonLindenstraussMinDim","title":"Plot minimum number of dimensions needed to retain distance between samples — PlotJohnsonLindenstraussMinDim","text":"https://en.wikipedia.org/wiki/Johnson–Lindenstrauss_lemma","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotJohnsonLindenstraussMinDim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot minimum number of dimensions needed to retain distance between samples — PlotJohnsonLindenstraussMinDim","text":"","code":"PlotJohnsonLindenstraussMinDim(list_eps, min_cells = 10, max_cells = 1e+06)"},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotJohnsonLindenstraussMinDim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot minimum number of dimensions needed to retain distance between samples — PlotJohnsonLindenstraussMinDim","text":"list_eps List eps plot ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotJohnsonLindenstraussMinDim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot minimum number of dimensions needed to retain distance between samples — PlotJohnsonLindenstraussMinDim","text":"(1 - eps) ||u - v||^2 < ||p(u) - p(v)||^2 < (1 + eps) ||u - v||^2","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a count matrix as produced by Bascet (hdf5 format). This can be output from both BascetQueryFq and BascetCountChrom — ReadBascetCountMatrix","title":"Read a count matrix as produced by Bascet (hdf5 format). This can be output from both BascetQueryFq and BascetCountChrom — ReadBascetCountMatrix","text":"Read count matrix produced Bascet (hdf5 format). can output BascetQueryFq BascetCountChrom","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a count matrix as produced by Bascet (hdf5 format). This can be output from both BascetQueryFq and BascetCountChrom — ReadBascetCountMatrix","text":"","code":"ReadBascetCountMatrix(bascetRoot, inputName, verbose = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a count matrix as produced by Bascet (hdf5 format). This can be output from both BascetQueryFq and BascetCountChrom — ReadBascetCountMatrix","text":"Count matrix sparseMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"Read KRAKEN2 count matrix produced Bascet (hdf5 format)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"","code":"ReadBascetKrakenMatrix(bascetRoot, inputName = \"kraken\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"fname Full name HDF5 count matrix file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"Counts sparseMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function, to load a single kraken matrix — ReadBascetKrakenMatrix_one","title":"Internal function, to load a single kraken matrix — ReadBascetKrakenMatrix_one","text":"Internal function, load single kraken matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function, to load a single kraken matrix — ReadBascetKrakenMatrix_one","text":"","code":"ReadBascetKrakenMatrix_one(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"Read count histogram associated Bascet. Bascets one, typically produced debarcoding","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"","code":"ReadHistogram(   bascetRoot,   inputName,   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"Histogram data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"Take KRAKEN2 count matrix column taxonomyID. Convert matrix columns instead names taxonomy. Unused taxonomyID columns kept","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"","code":"SetTaxonomyNamesFeatures(mat, keep_species_only = TRUE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"mat description keep_species_only description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"named count matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ShowFASTQCforCell.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — ShowFASTQCforCell","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — ShowFASTQCforCell","text":"Callback function aggregating FASTQC data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ShowFASTQCforCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — ShowFASTQCforCell","text":"","code":"ShowFASTQCforCell(   bascetFile,   cellID,   readnum = \"1\",   use_browser = FALSE,   verbose = FALSE )"},{"path":"https://henriksson-lab.github.io/zorn/reference/ShowFASTQCforCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — ShowFASTQCforCell","text":"readnum 1 2, R1 R2 use_browser Use operating system browser open file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ShowFASTQCforCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — ShowFASTQCforCell","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a runner that submits jobs to SLURM — SlurmRunner","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"Create runner submits jobs SLURM","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"","code":"SlurmRunner(   settings = NULL,   ncpu = NULL,   partition = NULL,   account = NULL,   time = NULL,   prepend = NULL,   mem = NULL )"},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"settings Default settings override; can NULL ncpu description partition description account description time time job allowed run, e.g. \"0-72:00:00\" prepend description mem description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"SLURM runner","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"TODO raw? wrap bascet?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"","code":"TabixGetFragmentsSeqs(fragpath, bascet_instance = GetDefaultBascetInstance())"},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"raw result tabix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Bascet instance works — TestBascetInstance","title":"Check if a Bascet instance works — TestBascetInstance","text":"Check Bascet instance works","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Bascet instance works — TestBascetInstance","text":"","code":"TestBascetInstance(bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Bascet instance works — TestBascetInstance","text":"bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Bascet instance works — TestBascetInstance","text":"\"ok\" instance works; panic otherwise","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.abricate.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating ABRicate data for each cell. To be called from BascetAggregateMap — aggr.abricate","title":"Callback function for aggregating ABRicate data for each cell. To be called from BascetAggregateMap — aggr.abricate","text":"Callback function aggregating ABRicate data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.abricate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating ABRicate data for each cell. To be called from BascetAggregateMap — aggr.abricate","text":"","code":"aggr.abricate(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.abricate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating ABRicate data for each cell. To be called from BascetAggregateMap — aggr.abricate","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.amrfinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating AMRFinderPlus data for each cell. To be called from BascetAggregateMap — aggr.amrfinder","title":"Callback function for aggregating AMRFinderPlus data for each cell. To be called from BascetAggregateMap — aggr.amrfinder","text":"Callback function aggregating AMRFinderPlus data cell. called BascetAggregateMap Callback function aggregating ABRicate data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.amrfinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating AMRFinderPlus data for each cell. To be called from BascetAggregateMap — aggr.amrfinder","text":"","code":"aggr.amrfinder(bascetFile, cellID, bascet_instance)  aggr.amrfinder(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.amrfinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating AMRFinderPlus data for each cell. To be called from BascetAggregateMap — aggr.amrfinder","text":"TODO TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.ariba.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating ARIBA data for each cell. To be called from BascetAggregateMap — aggr.ariba","title":"Callback function for aggregating ARIBA data for each cell. To be called from BascetAggregateMap — aggr.ariba","text":"Callback function aggregating ARIBA data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.ariba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating ARIBA data for each cell. To be called from BascetAggregateMap — aggr.ariba","text":"","code":"aggr.ariba(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.ariba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating ARIBA data for each cell. To be called from BascetAggregateMap — aggr.ariba","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.checkm.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating CheckM data for each cell. To be called from BascetAggregateMap — aggr.checkm","title":"Callback function for aggregating CheckM data for each cell. To be called from BascetAggregateMap — aggr.checkm","text":"Callback function aggregating CheckM data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.checkm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating CheckM data for each cell. To be called from BascetAggregateMap — aggr.checkm","text":"","code":"aggr.checkm(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.checkm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating CheckM data for each cell. To be called from BascetAggregateMap — aggr.checkm","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.fastqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — aggr.fastqc","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — aggr.fastqc","text":"Callback function aggregating FASTQC data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.fastqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — aggr.fastqc","text":"","code":"aggr.fastqc(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.fastqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating FASTQC data for each cell. To be called from BascetAggregateMap — aggr.fastqc","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.gecco.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating GECCO data for each cell. To be called from BascetAggregateMap — aggr.gecco","title":"Callback function for aggregating GECCO data for each cell. To be called from BascetAggregateMap — aggr.gecco","text":"Callback function aggregating GECCO data cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.gecco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating GECCO data for each cell. To be called from BascetAggregateMap — aggr.gecco","text":"","code":"aggr.gecco(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.gecco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating GECCO data for each cell. To be called from BascetAggregateMap — aggr.gecco","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating min-hashes for each cell. To be called from BascetAggregateMap — aggr.minhash","title":"Callback function for aggregating min-hashes for each cell. To be called from BascetAggregateMap — aggr.minhash","text":"Callback function aggregating min-hashes cell. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating min-hashes for each cell. To be called from BascetAggregateMap — aggr.minhash","text":"","code":"aggr.minhash(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating min-hashes for each cell. To be called from BascetAggregateMap — aggr.minhash","text":"Minhash data (minhash.txt) cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"Callback function aggregating QUAST data. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"","code":"aggr.quast(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"QUAST data cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"Callback function just getting raw file contents called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"","code":"aggr.rawtext(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"fname Name output filename get cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"QUAST data cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"_R1 – common illumina sequencer SRR****_1.fastq.gz – typical SRA","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"","code":"bascet_check_overwrite_output(outputFiles, overwrite)"},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"outputFiles Files expect exist overwrite Files expect exist","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"TRUE ok proceed","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"TODO convenient handle multiple samples, sample1/xxx; case, prepend sample name barcodes. issue: shardifying, good keep info merge. reduces work plenty! keep list shards belong next step","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":null,"dir":"Reference","previous_headings":"","what":"The default Bascet installation settings — bascet_instance.default","title":"The default Bascet installation settings — bascet_instance.default","text":"default Bascet installation settings","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default Bascet installation settings — bascet_instance.default","text":"","code":"bascet_instance.default"},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default Bascet installation settings — bascet_instance.default","text":"object class BascetInstance length 1.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default Bascet installation settings — bascet_instance.default","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/detect_shards_for_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","title":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","text":"Helper function: Figure shards belong together given root input name extension .e. root/name.##.ext","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/detect_shards_for_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","text":"","code":"detect_shards_for_file(bascetRoot, inputName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_exit.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: end an instance. the object should no longer be used after calling this function — extractstreamer_exit","title":"extract streamer: end an instance. the object should no longer be used after calling this function — extractstreamer_exit","text":"extract streamer: end instance. object longer used calling function","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_exit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: end an instance. the object should no longer be used after calling this function — extractstreamer_exit","text":"","code":"extractstreamer_exit(p)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_extract_to.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: extract to external file — extractstreamer_extract_to","title":"extract streamer: extract to external file — extractstreamer_extract_to","text":"extract streamer: extract external file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_extract_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: extract to external file — extractstreamer_extract_to","text":"","code":"extractstreamer_extract_to(p, fname, outpath)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_extract_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: extract to external file — extractstreamer_extract_to","text":"0 ok","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: list all files in current zip-file — extractstreamer_ls","title":"extract streamer: list all files in current zip-file — extractstreamer_ls","text":"extract streamer: list files current zip-file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: list all files in current zip-file — extractstreamer_ls","text":"","code":"extractstreamer_ls(p)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: list all files in current zip-file — extractstreamer_ls","text":"list files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_open.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: set which file is open — extractstreamer_open","title":"extract streamer: set which file is open — extractstreamer_open","text":"extract streamer: set file open","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: set which file is open — extractstreamer_open","text":"","code":"extractstreamer_open(p, fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: set which file is open — extractstreamer_open","text":"0 ok","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_read_n_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: helper function to read N lines — extractstreamer_read_n_lines","title":"extract streamer: helper function to read N lines — extractstreamer_read_n_lines","text":"extract streamer: helper function read N lines","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_read_n_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: helper function to read N lines — extractstreamer_read_n_lines","text":"","code":"extractstreamer_read_n_lines(p, n_lines, verbose = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_read_n_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: helper function to read N lines — extractstreamer_read_n_lines","text":"lines","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_read_one_line.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: helper function to read one line — extractstreamer_read_one_line","title":"extract streamer: helper function to read one line — extractstreamer_read_one_line","text":"extract streamer: helper function read one line","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_read_one_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: helper function to read one line — extractstreamer_read_one_line","text":"","code":"extractstreamer_read_one_line(p)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_read_one_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: helper function to read one line — extractstreamer_read_one_line","text":"line","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_showtext.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: get content of file, assumed to be text (or this function crashes) — extractstreamer_showtext","title":"extract streamer: get content of file, assumed to be text (or this function crashes) — extractstreamer_showtext","text":"extract streamer: get content file, assumed text (function crashes)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_showtext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: get content of file, assumed to be text (or this function crashes) — extractstreamer_showtext","text":"","code":"extractstreamer_showtext(p, fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_showtext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: get content of file, assumed to be text (or this function crashes) — extractstreamer_showtext","text":"text, divided line","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_start.html","id":null,"dir":"Reference","previous_headings":"","what":"extract streamer: create an instance — extractstreamer_start","title":"extract streamer: create an instance — extractstreamer_start","text":"extract streamer: create instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract streamer: create an instance — extractstreamer_start","text":"","code":"extractstreamer_start(   fname = NULL,   verbose = FALSE,   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/extractstreamer_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract streamer: create an instance — extractstreamer_start","text":"process","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetSingularityImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","text":"Get Bascet image (singularity docker). cached provided directory avoid downloading time","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetSingularityImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","text":"","code":"getBascetSingularityImage(store_at = \"./\", tempdir = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetSingularityImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"Get corresponding R2 file. Assumes input file R1","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"","code":"get_fastq_R2_from_R1(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"fname Path file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"Path R2 file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/helper_cancel_job_if_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a piece of script to exit a job early if file exists — helper_cancel_job_if_file_exists","title":"Create a piece of script to exit a job early if file exists — helper_cancel_job_if_file_exists","text":"Create piece script exit job early file exists","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/helper_cancel_job_if_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a piece of script to exit a job early if file exists — helper_cancel_job_if_file_exists","text":"","code":"helper_cancel_job_if_file_exists(fvar)"},{"path":"https://henriksson-lab.github.io/zorn/reference/helper_cancel_job_if_file_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a piece of script to exit a job early if file exists — helper_cancel_job_if_file_exists","text":"script","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_bam_paired_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","title":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","text":"Figure BAM-file paired alignment ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_bam_paired_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","text":"","code":"is_bam_paired_alignment(fname, bascet_instance = GetDefaultBascetInstance())"},{"path":"https://henriksson-lab.github.io/zorn/reference/is_bam_paired_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","text":"fname Name BAM-file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a file is a FASTQ file — is_fastq","title":"Check if a file is a FASTQ file — is_fastq","text":"Check file FASTQ file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a file is a FASTQ file — is_fastq","text":"","code":"is_fastq(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a file is a FASTQ file — is_fastq","text":"fname Path file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a file is a FASTQ file — is_fastq","text":"TRUE file type FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a file is a paired FASTQ file — is_paired_fastq","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"Panics file FASTQ ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"","code":"is_paired_fastq(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"fname Path file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"TRUE file paired FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/lseq.html","id":null,"dir":"Reference","previous_headings":"","what":"logarithmic spaced sequence, from emdbook library — lseq","title":"logarithmic spaced sequence, from emdbook library — lseq","text":"logarithmic spaced sequence, emdbook library","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/lseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logarithmic spaced sequence, from emdbook library — lseq","text":"","code":"lseq(from = 1, to = 1e+05, length.out = 6)"},{"path":"https://henriksson-lab.github.io/zorn/reference/make_output_shard_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","title":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","text":"Helper function: Generate suitable output filenames according shard system .e. root/name.##.ext","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/make_output_shard_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","text":"","code":"make_output_shard_names(bascetRoot, outputName, ext, num_shards)"},{"path":"https://henriksson-lab.github.io/zorn/reference/new_no_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty job. It is considered to have terminated from the start — new_no_job","title":"Create an empty job. It is considered to have terminated from the start — new_no_job","text":"Create empty job. considered terminated start","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/new_no_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty job. It is considered to have terminated from the start — new_no_job","text":"","code":"new_no_job()"},{"path":"https://henriksson-lab.github.io/zorn/reference/new_no_job.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty job. It is considered to have terminated from the start — new_no_job","text":"-job","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_bash_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","title":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","text":"Helper function: Create array values bash scripts","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_bash_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","text":"","code":"shellscript_make_bash_array(variable, vals)"},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_commalist.html","id":null,"dir":"Reference","previous_headings":"","what":"from a,b to ","title":"from a,b to ","text":",b \",b\"","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_commalist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"from a,b to ","text":"","code":"shellscript_make_commalist(f)"},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"Function template, basic parameter documentation can obtained ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"","code":"template_BascetFunction(   bascetRoot,   runner = GetDefaultBascetRunner(),   bascet_instance = GetDefaultBascetInstance() )"},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API num_output_shards Number output shards, .e., many output files split data ? (>=1) includeCells List cells process bascetFile Handle opened Bascet file cellID ID cell (string) verbose description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"job executed","code":""}]
