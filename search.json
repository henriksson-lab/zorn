[{"path":"https://henriksson-lab.github.io/zorn/articles/for_developers.html","id":"compiling-bascet","dir":"Articles","previous_headings":"","what":"Compiling Bascet","title":"Installation","text":"Bascet located separate Github repository first need download rust download Bascet get Rust dependencies: compile Bascet, just run “make” whenever make change:","code":"git clone https://github.com/henriksson-lab/bascet.git    #or: git clone git@github.com:henriksson-lab/bascet.git     cd bascet make install_rust  #this will install rust nightly build -- only need to do this once cd bascet make"},{"path":"https://henriksson-lab.github.io/zorn/articles/for_developers.html","id":"editing-the-bascet-code","dir":"Articles","previous_headings":"","what":"Editing the Bascet code","title":"Installation","text":"modify code, recommend VSCode particular, install rust code extensions. setup enables see compile errors get hints coding!","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/for_developers.html","id":"accessing-a-locally-compiled-bascet-in-zorn","dir":"Articles","previous_headings":"","what":"Accessing a locally compiled Bascet in Zorn","title":"Installation","text":"can link Rust binary: want access software Docker/Singularity, can also pass image; Bascet present, providing absolute path like override .","code":"bascet_instance.default <- BascetInstance(   bin=\"/path/to/bascet/target/debug/bascet\",   tempdir=\"./\" )"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"accessing-bascet-via-singularity","dir":"Articles","previous_headings":"","what":"Accessing Bascet via Singularity","title":"Installation","text":"First install Singularity installed, Zorn can pull latest Singularity image . recommend keeping separate directory workspace, multiple workspaces can share image","code":"bascet_inst <- getBascetSingularityImage(store_at=\"/somewhere/on/your/disk/\")"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"accessing-bascet-via-docker","dir":"Articles","previous_headings":"","what":"Accessing Bascet via Docker","title":"Installation","text":"First install Docker installed, Zorn can pull latest Docker image . recommend keeping separate directory workspace, multiple workspaces can share image","code":"bascet_inst <- getBascetDockerImage(store_at=\"/somewhere/on/your/disk/\")"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"testing-the-installation","dir":"Articles","previous_headings":"","what":"Testing the installation","title":"Installation","text":"Run following see get “ok” proceeding:","code":"TestBascetInstance(bascet_inst)"},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"using-the-bascet-instance","dir":"Articles","previous_headings":"","what":"Using the Bascet instance","title":"Installation","text":"need pass bascet_inst variable Zorn command requires . singularity image cached, run , instead use previous image. need delete manually wish replace .","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/install.html","id":"for-developers-accessing-a-locally-compiled-bascet","dir":"Articles","previous_headings":"","what":"For developers: Accessing a locally compiled Bascet","title":"Installation","text":"See separate page","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/isolates.html","id":"if-you-have-a-few-input-fastq-or-fasta-files","dir":"Articles","previous_headings":"","what":"If you have a few input FASTQ or FASTA files","title":"Isolate analysis","text":"two special file formats, “list-fastq” “list-fasta”, TSV simply consists * name sample * Links raw FASTQ-files FASTA-files file can used place Bascet TIRP ZIP-file, e.g., source filtered reads. effect, skip debarcoding sharding. TODO file format example","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/isolates.html","id":"if-you-have-really-many-fastafastq-files","dir":"Articles","previous_headings":"","what":"If you have really many FASTA/FASTQ files","title":"Isolate analysis","text":"case recommend produce TIRP files , way makes sense based infrastructure. See section file formats learn produce . can easily append one input file another, thus avoid need keep files disk time.","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/isolates.html","id":"mixing-single-cell-and-bulk-samples","dir":"Articles","previous_headings":"","what":"Mixing single-cell and bulk samples","title":"Isolate analysis","text":"Bascet currently support multiple input file formats given stage; .e. filtered reads, must TIRP format, another format. easiest way mix samples 1. Perform debarcoding sharding single-cell data TIRP 2. separate working directory bulk data, use Bascet transform convert list-FASTQ/FASTA TIRP 3. Copy bulk TIRP filtered.xxx.tirp.gz single-cell directory, xxx next number current single-cell shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"running-a-map-function","dir":"Articles","previous_headings":"","what":"Running a MAP function","title":"Map scripts","text":"Zorn/Bascet designed let run kinds software operates cells. can either raw reads, contigs, data produce. operations can computationally intense, happens MAP framework. example invoking built-QUAST script produce quality metrics assembled genome: (SLURM-compatible step)","code":"BascetMapCell(   bascetRoot,   withfunction = \"_quast\",   inputName = \"skesa\",   outputName = \"quast\",   runner=inst )"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"aggregating-map-results","dir":"Articles","previous_headings":"","what":"Aggregating MAP results","title":"Map scripts","text":"run map function, likely want load results R. call procedure “aggregate”. case QUAST, procedure loads quality metrics R data.frame object:","code":"quast_aggr <- MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   \"quast\",   aggr.quast ))"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"arguments-to-map-functions","dir":"Articles","previous_headings":"","what":"Arguments to MAP functions","title":"Map scripts","text":"scripts require additional arguments sent (link database file). done setting args argument. set two environment variables contents can picked script:","code":"BascetMapCell(   ...   args(DB=\"some/path\",OTHERARG=\"hi\")   ... )"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"custom-map-functions---introduction","dir":"Articles","previous_headings":"","what":"Custom MAP functions - introduction","title":"Map scripts","text":"easy add new functions! Easiest way simply copy modify code existing script. can start either * QUAST, takes contigs input * SKESA, takes FASTQ input written script, invoke direct path: cases want write aggregate function. function take output tool, parse , put sensible R object. look example existing aggregate functions inspiration. also catch-aggregate function requires bit special way calling. example takes “.txt”, generated tool, stores raw file content list. pretty may help debugging development:","code":"BascetMapCell(   bascetRoot,   withfunction = \"/path/to/your/script.sh\",   inputName = \"...\",   outputName = \"...\",   runner=inst ) quast_aggr <- MapListAsDataFrame(BascetAggregateMap(   bascetRoot,   \"input..\",   aggr.raw(\"out.txt\") ))"},{"path":"https://henriksson-lab.github.io/zorn/articles/map_scripts.html","id":"custom-map-functions---details","dir":"Articles","previous_headings":"","what":"Custom MAP functions - details","title":"Map scripts","text":"look example MAP function, find BASH script conforms certain pattern. actually just script (language) takes certain command line arguments. script returns API version, also validating valid script MAP calls script returns list files extract Bascet, cell. , “*” means get everything. Asking less means higher performance –missing-file-mode Bascet files missing. “skip” means just proceed next cell compress output files. “default” means compress. However, tool generates compressed files already, just waste time trying , case script can return “uncompressed”. directory input files located store output . directory already created many threads use particular process. Note Bascet already calling multiple MAP scripts parallel thus typically little benefit making individual process multithreaded called , check script needed software dependencies. case, returns “MAPCELL-CHECK”","code":"--bascet-api --expect-files  --compression-mode --input-dir XXX --output-dir YYY --num-threads ZZZ --preflight-check"},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using SLURM","text":"Zorn designed full replacement NextFlow job manager, processing single-cell genomics microbial isolates. design motivated Bascet file format: NextFlow operates file--file basis, Bascet keeps cells together sharded objects. natural minibatches otherwise rather small tasks, reducing overhead scheduling work (possibly many!) cells. SLURM one common job managers , Zorn thus works top SLURM writing appropriate Bascet commands. SLURM cluster, interested hear else people using!","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Using SLURM","text":"use SLURM, get used slightly different semantics run locally. First need set runner. way recommend , default values, partition submit , name account. can also set permissible default timeout time: make calls Bascet tutorials. difference pass reference SLURM. also pass job-specific settings related number CPUs memory per node. way done , default settings used overridden: major difference function now return immediately (asynchronous execution), compared usual local runner. means can keep working R task done, set parallel jobs (named differently). todo – runner can made block default want schedule series tasks, common, can use WaitForJob command pause R done. Putting -commands let batch tasks. main script, charge control flow, run tmux screen, login node cluster. can press ctrl+c end waiting loop early.","code":"slurm_runner <- SlurmRunner(   partition=\"shared\",    account=\"name_of_your_project\",    time=\"0-24:00:00\" ) my_job <- BascetGetRawAtrandiWGS(   bascetRoot,   rawmeta,   runner=SlurmRunner(     slurm_runner,      ncpu=5,      mem=\"5g\") ) WaitForJob(my_job)"},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"job-status","dir":"Articles","previous_headings":"","what":"Job status","title":"Using SLURM","text":"todo","code":""},{"path":"https://henriksson-lab.github.io/zorn/articles/slurm.html","id":"slurm-settings","dir":"Articles","previous_headings":"","what":"SLURM settings","title":"Using SLURM","text":"unable give specific suggestions cpu memory depends SLURM instance configured. example, Swedish clusters set give memory proportion number CPUs. Bascet written avoid using large amounts RAM possible. Exceptions use downstream software KRAKEN (particular). operations multithreaded benefit CPUs per node. Speed however limited disk access speed. thus worth investigating log files execution see much CPU/memory actually needed, improve long-term running Bascet.","code":""},{"path":"https://henriksson-lab.github.io/zorn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Henriksson. Author, maintainer. Laura Carroll. Author. Hadrien Gourlé. Author. Julian Dicken. Author. Henriksson Lab, Carroll Lab Collaborators. Funder.","code":""},{"path":"https://henriksson-lab.github.io/zorn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"xxx et al. Scalable single-cell metagenomic analysis Bascet Zorn. Biorxiv (2025)","code":"@Article{,   author = {{todo} and Laura Carroll and Johan Henriksson},   title = {Scalable single-cell metagenomic analysis with Bascet and Zorn},   journal = {Biorxiv},   year = {2025},   doi = {todo},   url = {https://todo}, }"},{"path":"https://henriksson-lab.github.io/zorn/index.html","id":"zorn","dir":"","previous_headings":"","what":"Zorn","title":"An all-purpose solution for processing of single-cell microbial data","text":"proud announce Zorn! install package, see install page.","code":""},{"path":"https://henriksson-lab.github.io/zorn/index.html","id":"about-zorn","dir":"","previous_headings":"","what":"About Zorn","title":"An all-purpose solution for processing of single-cell microbial data","text":"Zorn R package designed use Zorn research, please cite: (TODO) Zorn developed maintained Henriksson Carroll labs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate frequency of minhashes across cells — AggregateMinhashes","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"Aggregate frequency minhashes across cells","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"","code":"AggregateMinhashes(bascetRoot, inputName = \"minhash\", bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"bascetRoot root folder Bascets stored inputName description bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AggregateMinhashes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate frequency of minhashes across cells — AggregateMinhashes","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"command assumes cells named follows: well1_well2_well3_well4, e.g. well1 format G12","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"","code":"AtrandiBarcodeStats(   bascetRoot,   inputName = \"debarcoded\",   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/AtrandiBarcodeStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a Bascet, produce a matrix showing for each combinatorial barcode, how many times it occurs across the cells. Presented as a 96-well plate matrix — AtrandiBarcodeStats","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"Produce matrix Barnyard plots, .e., counts one species vs another, combinations species.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"","code":"BarnyardPlotMatrix(adata)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"adata Seurat object DefaultAssay set species count","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BarnyardPlotMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a matrix of Barnyard plots, i.e., counts for one species vs another, for all combinations of species. — BarnyardPlotMatrix","text":"ggarranged set ggplots","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/Bascet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A bascet, along with all the shards — Bascet-class","title":"A bascet, along with all the shards — Bascet-class","text":"bascet, along shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from previous Map call — BascetAggregateMap","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"todo: allow multi-cpu support? parallel library todo note, effectively pure-R map function. different name?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"","code":"BascetAggregateMap(   bascetRoot,   bascetName,   aggrFunction,   showProgress = TRUE,   bascet_instance )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAggregateMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data from previous Map call — BascetAggregateMap","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":null,"dir":"Reference","previous_headings":"","what":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"TODO managed Bascet mapshard system, automatic input conversion. unaligned file made temp removed","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"","code":"BascetAlignToReference(   bascetRoot,   useReference,   numLocalThreads = 1,   inputName = \"asfq\",   outputNameBAMunsorted = \"unsorted_aligned\",   outputNameBAMsorted = \"aligned\",   do_sort = TRUE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignToReference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align from FASTQ, generate sorted and indexed BAM file — BascetAlignToReference","text":"useReference Name BWA reference use numLocalThreads Number threads use runner outputNameBAMunsorted Name unsorted BAMs outputNameBAMsorted Name sorted BAMs (generated) do_sort Whether sort output ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignmentToBigwig.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","title":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","text":"function mainly QC purposes. uses bamCoverage deepTools apt install python3-deeptools","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignmentToBigwig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","text":"","code":"BascetAlignmentToBigwig(   bascetRoot,   inputName = \"aligned\",   outputName = \"pileup\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetAlignmentToBigwig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a bigwig out of all reads in a sorted BAM. Note that the caller is responsible for sorting the BAM first — BascetAlignmentToBigwig","text":"outputName Name output file (BIGWIG-file)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"Take aligned BAM file produce Fragments.tsv.gz, compatible Signac ATAC-seq style analysis","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"","code":"BascetBam2Fragments(   bascetRoot,   inputName = \"aligned\",   outputName = \"fragments\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetBam2Fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take aligned BAM file and produce Fragments.tsv.gz, compatible with Signac ATAC-seq style analysis — BascetBam2Fragments","text":"job, producing type Fragments.tsv.gz","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of cells in a Bascet — BascetCellNames","title":"Get list of cells in a Bascet — BascetCellNames","text":"Get list cells Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of cells in a Bascet — BascetCellNames","text":"","code":"BascetCellNames(bascetRoot, bascetName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of cells in a Bascet — BascetCellNames","text":"bascetRoot root folder Bascets stored bascetName Name bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCellNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of cells in a Bascet — BascetCellNames","text":"Vector cell names strings","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"Compute minhashes cell. thin wrapper around BascetMapCell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"","code":"BascetComputeMinhash(   bascetRoot,   inputName = \"filtered\",   outputName = \"minhash\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetComputeMinhash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute minhashes for each cell. This is a thin wrapper around BascetMapCell — BascetComputeMinhash","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":null,"dir":"Reference","previous_headings":"","what":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"aligned BAM file, compute counts per chromosome","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"","code":"BascetCountChrom(   bascetRoot,   inputName = \"aligned\",   outputName = \"chromcount\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetCountChrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From aligned BAM file, compute counts per chromosome — BascetCountChrom","text":"job, executing counting","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"CHANGED: just sums kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"","code":"BascetFeaturiseKMC(   bascetRoot,   inputName = \"kmc\",   outputName = \"sumkmers\",   includeCells = NULL,   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"bascetRoot root folder Bascets stored includeCells List cells process runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFeaturiseKMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select kmers that appear useful for clustering — BascetFeaturiseKMC","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter an alignment (BAM-file). — BascetFilterAlignment","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"typically used either remove host DNA, keep reads mapping known reference","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"","code":"BascetFilterAlignment(   bascetRoot,   numLocalThreads = 1,   inputName,   outputName,   keep_mapped = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"numLocalThreads Number threads use runner outputName Name output file (BAM-file) keep_mapped Keep mapped reads (TRUE) unmapped (FALSE)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetFilterAlignment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter an alignment (BAM-file). — BascetFilterAlignment","text":"BAM-file paired reads reads need mapped (flag 0x2); otherwise (flag 0x4)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"Generate BAM barcodes input raw FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"","code":"BascetGetRaw(   bascetRoot,   rawmeta,   outputName = \"debarcoded\",   outputNameIncomplete = \"incomplete_reads\",   chemistry = \"atrandi_wgs\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetGetRaw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate BAM with barcodes from input raw FASTQ — BascetGetRaw","text":"bascetRoot root folder Bascets stored rawmeta Metadata raw FASTQ input files. See DetectRawFileMeta outputName Name output files: Debarcoded reads outputNameIncomplete Name output files: Reads parsed chemistry type data parsed overwrite description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeBWA.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","title":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","text":"Index genome using BWA can used alignment","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeBWA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","text":"","code":"BascetIndexGenomeBWA(   bascetRoot,   genomeFile,   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetIndexGenomeBWA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a genome using BWA such that it can be used for alignment — BascetIndexGenomeBWA","text":"genomeFile Name FASTA file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new bascet instance. For advanced users only — BascetInstance","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"Create new bascet instance. advanced users ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"","code":"BascetInstance(bin, tempdir, prepend_cmd = \"\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"bin Name binary tempdir Directory store temporary files prepend_cmd Something prepend command, e.g. support container systems","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new bascet instance. For advanced users only — BascetInstance","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":null,"dir":"Reference","previous_headings":"","what":"List files for a cell in a Bascet — BascetListFilesForCell","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"can made faster , e.g., reading location objects file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"","code":"BascetListFilesForCell(   bascetFile,   cellID,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"bascetFile Bascet file object cellID Name cell bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetListFilesForCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files for a cell in a Bascet — BascetListFilesForCell","text":"data.frame list files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeKrakenCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","title":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","text":"TODO: run kraken run","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeKrakenCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","text":"","code":"BascetMakeKrakenCountMatrix(   bascetRoot,   numLocalThreads = 1,   inputName = \"kraken_out\",   outputName = \"kraken\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeKrakenCountMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a count matrix of taxonomy IDs from KRAKEN output — BascetMakeKrakenCountMatrix","text":"bascetRoot root folder Bascets stored numLocalThreads description inputName description outputName description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API useKrakenDB description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"Gather minhashes single histogram file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"","code":"BascetMakeMinhashHistogram(   bascetRoot,   inputName = \"minhash\",   outputName = \"minhash_hist.csv\",   includeCells = NULL,   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"bascetRoot root folder Bascets stored includeCells List cells process runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMakeMinhashHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather all minhashes into a single histogram file — BascetMakeMinhashHistogram","text":"job","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a MAP function for all cells — BascetMapCell","title":"Call a MAP function for all cells — BascetMapCell","text":"","code":"TODO override args docs"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a MAP function for all cells — BascetMapCell","text":"","code":"BascetMapCell(   bascetRoot,   withfunction,   inputName,   outputName,   args = list(),   overwrite = TRUE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a MAP function for all cells — BascetMapCell","text":"args List arguments (key,value) provide script","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data — BascetMapTransform","title":"Transform data — BascetMapTransform","text":"command enables subsetting list cells converting file formats merging shards dividing shards","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data — BascetMapTransform","text":"","code":"BascetMapTransform(   bascetRoot,   inputName,   outputName,   num_divide = 1,   num_merge = 1,   out_format = \"tirp.gz\",   includeCells = NULL,   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetMapTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data — BascetMapTransform","text":"num_divide description num_merge description out_format description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":null,"dir":"Reference","previous_headings":"","what":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"Build count table FASTQ reads list selected kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"","code":"BascetQueryFq(   bascetRoot,   inputName = \"filtered\",   outputName = \"kmer_counts\",   useKMERs,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"bascetRoot root folder Bascets stored useKMERs description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryFq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build count table from FASTQ reads and a list of selected kmers — BascetQueryFq","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"Build count table kmer table list selected kmers","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"","code":"BascetQueryKMC(   bascetRoot,   inputName = \"kmc\",   outputName = \"kmer\",   useKMERs,   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"bascetRoot root folder Bascets stored useKMERs description runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetQueryKMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build count table from kmer table and a list of selected kmers — BascetQueryKMC","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read one file from a Bascet — BascetReadFile","title":"Read one file from a Bascet — BascetReadFile","text":"TODO can made faster , e.g., reading location objects file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read one file from a Bascet — BascetReadFile","text":"","code":"BascetReadFile(   bascetFile,   cellID,   filename,   as = c(\"tempfile\"),   bascet_instance = bascet_instance.default,   verbose = FALSE )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read one file from a Bascet — BascetReadFile","text":"bascetFile Handle opened Bascet file cellID ID cell (string) filename description description bascet_instance Configuration run Bascet Rust API verbose description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetReadFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read one file from a Bascet — BascetReadFile","text":"Name temporary file read content stored","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKraken.html","id":null,"dir":"Reference","previous_headings":"","what":"Run KRAKEN2 for each cell — BascetRunKraken","title":"Run KRAKEN2 for each cell — BascetRunKraken","text":"Run KRAKEN2 cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKraken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run KRAKEN2 for each cell — BascetRunKraken","text":"","code":"BascetRunKraken(   bascetRoot,   useKrakenDB = \"/data/henlab/kraken/standard-8\",   numLocalThreads = 1,   inputName = \"asfq\",   outputName = \"kraken_out\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetRunKraken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run KRAKEN2 for each cell — BascetRunKraken","text":"useKrakenDB Path KRAKEN2 database","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":null,"dir":"Reference","previous_headings":"","what":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"reads one cell guaranteed present single shard. makes parallel processing simple shard can processed separate computer. Using shards means computers can used.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"","code":"BascetShardify(   bascetRoot,   inputName = \"debarcoded\",   includeCells = NULL,   num_output_shards = 1,   outputName = \"filtered\",   overwrite = FALSE,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"inputName Name input file: Debarcoded reads outputName Name output file: Properly sharded debarcoded reads","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/BascetShardify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Take debarcoded reads and split them into suitable numbers of shards. — BascetShardify","text":"perform calculations single computer, one shard result speedup. option relevant using cluster compute nodes. TODO multiple input samples, way group ? otherwise reading input files needed. said, got index, list cells specified, possible quickly figure file needed merge TODO Figuring file needed can done \"planning\" (Zorn) stage TODO seems faster single merger writes multiple output files cell list provided. overhead accepted read input files discard cells fly","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a count matrix on strain level — ChromToSpeciesCount","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"TODO specific?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"","code":"ChromToSpeciesCount(adata, map_seq2strain)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ChromToSpeciesCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a count matrix on strain level — ChromToSpeciesCount","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"Obtain feature matrix (seurat object) given seurat object Fragments associated","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"","code":"CountGrangeFeatures(adata, grange_gene)"},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"adata Seurat object, FeatureMatrix grange_gene grange object telling count","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/CountGrangeFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a feature matrix (as seurat object) given an seurat object having Fragments associated — CountGrangeFeatures","text":"Seurat AssayObject","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"_R1 – common illumina sequencer SRR****_1.fastq.gz – typical SRA","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"","code":"DetectRawFileMeta(rawRoot, verbose = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"rawRoot Path folder FASTQ files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"data frame metadata raw input files","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/DetectRawFileMeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect metadata for raw input FASTQ files — DetectRawFileMeta","text":"TODO convenient handle multiple samples, sample1/xxx; case, prepend sample name barcodes. issue: shardifying, good keep info merge. reduces work plenty! keep list shards belong next step","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":null,"dir":"Reference","previous_headings":"","what":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"Signac chromatin assay fragments, cell, count many reads per chromosome","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"","code":"FragmentCountsPerChrom(chrom_assay, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome — FragmentCountsPerChrom","text":"FeatureMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"Signac chromatin assay fragments, cell, count many reads per chromosome. function directly returns assay can added Seurat multimodal object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"","code":"FragmentCountsPerChromAssay(bascetRoot, inputName = \"fragments.1.tsv.gz\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentCountsPerChromAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a Signac chromatin assay with fragments, for each cell, count how many reads per chromosome. This function directly returns an assay that can be added to a Seurat multimodal object — FragmentCountsPerChromAssay","text":"seurat object holding counts","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":null,"dir":"Reference","previous_headings":"","what":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"Case: tabix command line uses 100% cpu . likely designed large queries","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"","code":"FragmentsToSignac(fragpath)"},{"path":"https://henriksson-lab.github.io/zorn/reference/FragmentsToSignac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From a fragments file, get a chromatin assay for Signac .......................... signac is dirt slow at counting! only 1 cpu used. take over the whole process — FragmentsToSignac","text":"ChromatinAssay","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a temp directory to use; need to be created — GetBascetTempDir","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"Get temp directory use; need created","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"","code":"GetBascetTempDir(bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/GetBascetTempDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a temp directory to use; need to be created — GetBascetTempDir","text":"path temp directory can created. Must removed done","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"Pick random KMERs KMC3 database. choice among KMERs within frequency range","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"","code":"KmcChooseKmerFeatures(fname, num_pick = 1000, minfreq = 0.01, maxfreq = 0.1)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"fname description num_pick description minfreq description maxfreq description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcChooseKmerFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick random KMERs from KMC3 database. The choice is among KMERs within a frequency range — KmcChooseKmerFeatures","text":"List KMERs","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a histogram from a KMC3 database — KmcGetHistogram","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"Generate histogram KMC3 database","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"","code":"KmcGetHistogram(fname, plot = TRUE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"fname Full name KMC3 database toplot Decide plot return raw data","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a histogram from a KMC3 database — KmcGetHistogram","text":"ggplot object toplot=TRUE, otherwise data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get KMERs from a KMC3 database — KmcGetKmers","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"TODO finish properly","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"","code":"KmcGetKmers(fname, mincount = NULL, maxcount = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KmcGetKmers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get KMERs from a KMC3 database — KmcGetKmers","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a kneeplot — KneeplotPerSpecies","title":"Produce a kneeplot — KneeplotPerSpecies","text":"Produce kneeplot","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a kneeplot — KneeplotPerSpecies","text":"","code":"KneeplotPerSpecies(adata, max_species = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a kneeplot — KneeplotPerSpecies","text":"adata description max_species description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KneeplotPerSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a kneeplot — KneeplotPerSpecies","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"KRAKEN2 count matrix, return consensus taxID cell metadata","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"","code":"KrakenFindConsensusTaxonomy(mat)"},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"mat count matrix, typically sparse format","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenFindConsensusTaxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For a KRAKEN2 count matrix, return consensus taxID for each cell as metadata — KrakenFindConsensusTaxonomy","text":"data.frame holding cellID consensus taxID","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Using a KRAKEN2 count matrix, produce a ","title":"Using a KRAKEN2 count matrix, produce a ","text":"Using KRAKEN2 count matrix, produce \"kneeplot\" species","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using a KRAKEN2 count matrix, produce a ","text":"","code":"KrakenSpeciesDistribution(adata, use_assay = \"kraken\")"},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using a KRAKEN2 count matrix, produce a ","text":"adata Seurat object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/KrakenSpeciesDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using a KRAKEN2 count matrix, produce a ","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new local runner instance — LocalRunner","title":"Create new local runner instance — LocalRunner","text":"Create new local runner instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new local runner instance — LocalRunner","text":"","code":"LocalRunner(maxcpu = \"10\", direct = FALSE, show_script = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/LocalRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new local runner instance — LocalRunner","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","title":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","text":"Convenience function; alternative somehow implement .data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","text":"","code":"MapListAsDataFrame(mylist)"},{"path":"https://henriksson-lab.github.io/zorn/reference/MapListAsDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function; alternative is to somehow implement as.data.frame — MapListAsDataFrame","text":"TODO","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/NoRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new No-runner instance. This system is for testing only — NoRunner","title":"Create new No-runner instance. This system is for testing only — NoRunner","text":"Create new -runner instance. system testing ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/NoRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new No-runner instance. This system is for testing only — NoRunner","text":"","code":"NoRunner(show_script = FALSE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/NoRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new No-runner instance. This system is for testing only — NoRunner","text":"-runner","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Bascet, prepare it for reading individual files — OpenBascet","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"TODO current code based pure R, efficient calls can made future. thus advise direct zip-file manipulation guarantee future support ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"","code":"OpenBascet(bascetRoot, bascetName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"bascetRoot root folder Bascets stored","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/OpenBascet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a Bascet, prepare it for reading individual files — OpenBascet","text":"handle Bascet","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"Plot histogram, loaded ReadHistogram","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"","code":"PlotHistogram(dat)"},{"path":"https://henriksson-lab.github.io/zorn/reference/PlotHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a histogram, loaded by ReadHistogram — PlotHistogram","text":"ggplot object","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"Read count matrix produced Bascet (hdf5 format)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"","code":"ReadBascetCountMatrix(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"fname Full name hdf5 count matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetCountMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a count matrix as produced by Bascet (hdf5 format) — ReadBascetCountMatrix","text":"Count matrix sparseMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"Read KRAKEN2 count matrix produced Bascet (hdf5 format)","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"","code":"ReadBascetKrakenMatrix(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"fname Full name HDF5 count matrix file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadBascetKrakenMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a KRAKEN2 count matrix as produced by Bascet (hdf5 format) — ReadBascetKrakenMatrix","text":"Counts sparseMatrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"Read count histogram associated Bascet. Bascets one, typically produced debarcoding","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"","code":"ReadHistogram(bascetRoot, inputName, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/ReadHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the count histogram associated with a Bascet. Not all Bascets have one, but it is typically produced after debarcoding — ReadHistogram","text":"Histogram data.frame","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"Take KRAKEN2 count matrix column taxonomyID. Convert matrix columns instead names taxonomy. Unused taxonomyID columns kept","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"","code":"SetTaxonomyNamesFeatures(mat, keep_species_only = TRUE)"},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"mat description keep_species_only description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SetTaxonomyNamesFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a KRAKEN2 count matrix where the column is the taxonomyID. Convert to a matrix where the columns instead are the names of each taxonomy. Unused taxonomyID columns will not be kept — SetTaxonomyNamesFeatures","text":"named count matrix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a runner that submits jobs to SLURM — SlurmRunner","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"Create runner submits jobs SLURM","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"","code":"SlurmRunner(   settings = NULL,   ncpu = NULL,   partition = NULL,   account = NULL,   time = NULL,   prepend = NULL,   mem = NULL )"},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"settings Default settings override; can NULL ncpu description partition description account description time time job allowed run, e.g. \"0-72:00:00\" prepend description mem description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/SlurmRunner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a runner that submits jobs to SLURM — SlurmRunner","text":"SLURM runner","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"TODO raw? wrap bascet?","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"","code":"TabixGetFragmentsSeqs(fragpath, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/TabixGetFragmentsSeqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using Tabix, get list of sequences in a fragment file — TabixGetFragmentsSeqs","text":"raw result tabix","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Bascet instance works — TestBascetInstance","title":"Check if a Bascet instance works — TestBascetInstance","text":"Check Bascet instance works","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Bascet instance works — TestBascetInstance","text":"","code":"TestBascetInstance(bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Bascet instance works — TestBascetInstance","text":"bascet_instance Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/TestBascetInstance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Bascet instance works — TestBascetInstance","text":"\"ok\" instance works; panic otherwise","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","title":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","text":"Callback function aggregating min-hashes cell called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","text":"","code":"aggr.minhash(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.minhash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating min-hashes for each cell To be called from BascetAggregateMap — aggr.minhash","text":"Minhash data (minhash.txt) cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"Callback function aggregating QUAST data. called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"","code":"aggr.quast(bascetFile, cellID, bascet_instance)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.quast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for aggregating QUAST data. To be called from BascetAggregateMap — aggr.quast","text":"QUAST data cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"Callback function just getting raw file contents called BascetAggregateMap","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"","code":"aggr.rawtext(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"fname Name output filename get cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/aggr.rawtext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Callback function for just getting raw file contents To be called from BascetAggregateMap — aggr.rawtext","text":"QUAST data cell","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"_R1 – common illumina sequencer SRR****_1.fastq.gz – typical SRA","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"","code":"bascet_check_overwrite_output(outputFiles, overwrite)"},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"outputFiles Files expect exist overwrite Files expect exist","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"TRUE ok proceed","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_check_overwrite_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect metadata for raw input FASTQ files — bascet_check_overwrite_output","text":"TODO convenient handle multiple samples, sample1/xxx; case, prepend sample name barcodes. issue: shardifying, good keep info merge. reduces work plenty! keep list shards belong next step","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":null,"dir":"Reference","previous_headings":"","what":"The default Bascet installation settings — bascet_instance.default","title":"The default Bascet installation settings — bascet_instance.default","text":"default Bascet installation settings","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default Bascet installation settings — bascet_instance.default","text":"","code":"bascet_instance.default"},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default Bascet installation settings — bascet_instance.default","text":"object class BascetInstance length 1.","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/bascet_instance.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default Bascet installation settings — bascet_instance.default","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/detect_shards_for_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","title":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","text":"Helper function: Figure shards belong together given root input name extension .e. root/name.##.ext","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/detect_shards_for_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Figure out which shards belong together given root input name and extension i.e. root/name.##.ext — detect_shards_for_file","text":"","code":"detect_shards_for_file(bascetRoot, inputName)"},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetSingularityImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","text":"Get Bascet image (singularity docker). cached provided directory avoid downloading time","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetSingularityImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","text":"","code":"getBascetSingularityImage(store_at = \"./\", tempdir = NULL)"},{"path":"https://henriksson-lab.github.io/zorn/reference/getBascetSingularityImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Bascet image (singularity or docker). It will be cached in the provided directory to avoid downloading it all the time — getBascetSingularityImage","text":"Bascet instance","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"Get corresponding R2 file. Assumes input file R1","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"","code":"get_fastq_R2_from_R1(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"fname Path file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/get_fastq_R2_from_R1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get corresponding R2 file. Assumes that the input file is R1 — get_fastq_R2_from_R1","text":"Path R2 file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_bam_paired_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","title":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","text":"Figure BAM-file paired alignment ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_bam_paired_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","text":"","code":"is_bam_paired_alignment(fname, bascet_instance = bascet_instance.default)"},{"path":"https://henriksson-lab.github.io/zorn/reference/is_bam_paired_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Figure out if a BAM-file is a paired alignment or not — is_bam_paired_alignment","text":"fname Name BAM-file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a file is a FASTQ file — is_fastq","title":"Check if a file is a FASTQ file — is_fastq","text":"Check file FASTQ file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a file is a FASTQ file — is_fastq","text":"","code":"is_fastq(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a file is a FASTQ file — is_fastq","text":"fname Path file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a file is a FASTQ file — is_fastq","text":"TRUE file type FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a file is a paired FASTQ file — is_paired_fastq","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"Panics file FASTQ ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"","code":"is_paired_fastq(fname)"},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"fname Path file","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/is_paired_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a file is a paired FASTQ file — is_paired_fastq","text":"TRUE file paired FASTQ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/make_output_shard_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","title":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","text":"Helper function: Generate suitable output filenames according shard system .e. root/name.##.ext","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/make_output_shard_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Generate suitable output filenames according to shard system i.e. root/name.##.ext — make_output_shard_names","text":"","code":"make_output_shard_names(bascetRoot, outputName, ext, num_shards)"},{"path":"https://henriksson-lab.github.io/zorn/reference/new_no_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty job. It is considered to have terminated from the start — new_no_job","title":"Create an empty job. It is considered to have terminated from the start — new_no_job","text":"Create empty job. considered terminated start","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/new_no_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty job. It is considered to have terminated from the start — new_no_job","text":"","code":"new_no_job()"},{"path":"https://henriksson-lab.github.io/zorn/reference/new_no_job.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty job. It is considered to have terminated from the start — new_no_job","text":"-job","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_bash_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","title":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","text":"Helper function: Create array values bash scripts","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/shellscript_make_bash_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Create array of values in bash scripts — shellscript_make_bash_array","text":"","code":"shellscript_make_bash_array(variable, vals)"},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"Function template, basic parameter documentation can obtained ","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"","code":"template_BascetFunction(   bascetRoot,   runner,   bascet_instance = bascet_instance.default )"},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"bascetRoot root folder Bascets stored runner job manager, specifying command run (e.g. locally, via SLURM) bascet_instance Configuration run Bascet Rust API num_output_shards Number output shards, .e., many output files split data ? (>=1) includeCells List cells process bascetFile Handle opened Bascet file cellID ID cell (string) verbose description","code":""},{"path":"https://henriksson-lab.github.io/zorn/reference/template_BascetFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function template, where basic parameter documentation can be obtained from — template_BascetFunction","text":"job executed","code":""}]
